@model IShop.Core.Advance

@{
    ViewBag.Title = "New Request";
}

<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 0.5rem;
        border-color: whitesmoke;
    }

    .form-control form-rounded {
        border-radius: 0.5rem;
        border-color: whitesmoke;
    }

    .form-rounded2 {
        border-radius: 1rem;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>
<div class="card " style="background-color: rgb(255, 255, 255, 0.78);">


    <div class="card-header" style="background-color: #001F3F">
        <h3 class="card-title" style="color:white">
            <i class="fa fa-list"></i>
            Admin Approval
        </h3>
    </div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <br />
        <div class="col d-flex justify-content-center">
            <div class="col-md-12 col-sm-12 col-12">
                <div class="card mb- mb-xl-0" style="border-radius: 24px;">

                    <div class="card-body">
                        <div style="text-align:center"><b>SALARY ADVANCE FORM</b></div>
                        <hr />

                        <div class="row">
                            <div class="col-auto" style="text-align:center">
                                <div class="input-group mb-3">

                                    <div class="input-group-prepend">
                                        <div class="input-group-text"><b style="color:darkblue">Your Name</b></div>
                                    </div>
                                    @Html.TextBoxFor(m => m.Employee, new { @class = "form-control form-rounded", @Value = User.Identity.Name, id = "Employee", @required = "required", @readonly = true })
                                </div>

                            </div>

                            <div class="col-auto">
                                <div class="input-group mb-2" style="text-align:center">

                                    <div class="input-group-prepend">
                                        <div class="input-group-text"><b style="color:darkblue">Date</b></div>
                                    </div>
                                    @Html.TextBoxFor(m => m.CreatedOn, new { @class = "form-control form-rounded", @required = "required", @readonly = true })
                                </div>
                            </div>

                        </div>

                        <hr />
                        <div class="card">
                            <div class="card-body" style="background-color:whitesmoke">
                                <br />
                                <p>
                                    I <span>
                                        @Html.EditorFor(model => model.Employee_Fullnames, new { @class = "form-control form-rounded", @Readonly = true })
                                    </span>,
                                    request an advance payment of
                                    Ksh
                                    <span>@Html.EditorFor(model => model.Amount, new { @class = "form-control form-rounded" })</span>
                                    in words <span>
                                        @Html.EditorFor(model => model.Amount_Words, new { @class = "form-control form-rounded" })
                                    </span>
                                    on my salary to be
                                    paid on date


                                    <span>
                                        @Html.EditorFor(model => model.Pay_Date, new { @class = "form-control form-rounded" })

                                    </span> due to

                                    <span>
                                        @Html.EditorFor(model => model.Due_to, new { @class = "form-control form-rounded" })
                                    </span>
                                    as permitted by company policy.
                                </p>
                                <p>
                                    I agree to repay this advance as follows, One lump-sum payroll deduction to be made from my salary on the first pay period
                                    immediately following the pay period from which this advance is made.I also agree that if I terminate employment prior to total repayment of this advance, I
                                    authorize the company to deduct any unpaid advance amount from the salary owed me at the time of termination of employment.
                                </p>
                                
                                <hr />
                                <div class="row">
                                    @if ((this.User.IsInRole("Admin")))
                                    {
                                        <div class="form-group col-md-2">
                                            <label><i class="fa fa-spinner text-warning"></i> @Html.LabelFor(model => model.Approved_by_Manager)</label>
                                            @{
                                                List<SelectListItem> v = new List<SelectListItem>();
                                                v.Add(new SelectListItem
                                                {
                                                    Text = "Approved",
                                                    Value = "Approved",
                                                });
                                                v.Add(new SelectListItem
                                                {
                                                    Text = "Pending",
                                                    Value = "Pending ",
                                                });

                                            }@Html.DropDownListFor(model => model.Approved_by_Manager, v, "--select action--", new { @class = "form-control form-control-rounded" })
                                        </div>

                                        <div class="form-group col-md-2">
                                            <label><i class="fa fa-spinner text-warning"></i> @Html.LabelFor(model => model.Approved_by_Finance)</label>
                                            @Html.EditorFor(model => model.Approved_by_Finance, new
                                       {
                                           htmlAttributes = new
                                           {
                                               @class = "form-control form-control-rounded",
                                               @Placeholder = "Finance Approvals",
                                               @Readonly = true
                                           }
                                       })
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group col-md-2">
                                            <label><i class="fa fa-spinner text-warning"></i> @Html.LabelFor(model => model.Approved_by_Finance)</label>
                                            @{
                                                List<SelectListItem> x = new List<SelectListItem>();
                                                x.Add(new SelectListItem
                                                {
                                                    Text = "Approved",
                                                    Value = "Approved",
                                                });
                                                x.Add(new SelectListItem
                                                {
                                                    Text = "Pending",
                                                    Value = "Pending ",
                                                });

                                            }@Html.DropDownListFor(model => model.Approved_by_Finance, x, "--select action--", new { @class = "form-control form-control-rounded" })
                                        </div>

                                        <div class="form-group col-md-2">
                                            <label><i class="fa fa-spinner text-warning"></i> @Html.LabelFor(model => model.Approved_by_Manager)</label>
                                            @Html.EditorFor(model => model.Approved_by_Manager, new
                                       {
                                           htmlAttributes = new
                                           {
                                               @class = "form-control form-control-rounded",
                                               @Placeholder = "Admin Approvals",
                                               @Readonly = true
                                           }
                                       })
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>








                        <div class="row">
                            <table>
                                <thead>
                                    <tr>

                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                <td style="text-align:left">

                                    <input type="submit" value="Submit" class="btn btn btn-success" style="color:white" onclick="return confirm('Are you sure you want to submit?')" />


                                    <script>
                                        $(function () {
                                            $('#Create').click(function () {
                                                if (confirm('Are you sure?')) {
                                                    window.location.href = $(this).data('url');
                                                }
                                            });
                                        });
                                    </script>
                                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                                    <input type="reset" value="Reset" class="btn btn-danger" style="color:white" />



                                </td>
                                </tbody>
                            </table>
                        </div>






                    </div>






                </div>
            </div>
        </div>

    }


