@using PagedList
@using PagedList.Mvc;
@model IPagedList<IShop.Core.Timesheet>

@{
    ViewBag.Title = "Timesheet ";
}


<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }
</style>

<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }

    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    table {
        border-collapse: collapse;
        overflow: visible;
    }
    .curved-table {
        border-collapse: collapse;
        border-radius: 7px;
        overflow: visible;
    }

        .curved-table th,
        .curved-table td {
            padding: 10px;
            border-radius: 7px;
            border: 1px solid #00000033;
        }
    .form-rounded2 {
        border-radius: 0.5rem;
        width: 20%;
        border-color: black;
    }
</style>

<div class="card " style="background-color: rgb(255, 255, 255, 0.82);">


    <div class="card-header col-md-7 col-sm-12 col-12 " style="background-color: #192530; color: white; border-radius: 14px ">
        <h3 class="card-title" style="color:white;text-align:center">
            <i class="fa fa-suitcase"></i>
            My Timesheeets
        </h3>

       



    </div>

    @if (TempData["Msg"] != null)
    {<div class="row">
            <div class="alert alert-warning col-md-6 col-md-offset-4" align="center">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                @TempData["Msg"]
            </div>
        </div>
    }

    <script>
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 2000);
    </script>



    <div class="table-responsive" style="min-height: 300px">

        <table class="table table-bordered table-hover   table-condensed table-striped table-hover sortable curved-table">


            <thead>
                <tr style="color:white">
                    <th style="background-color: #192530; font-size: medium; ">
                        <i class="fa fa-user-circle"></i> @ViewBag.userinfo.UserName

                    </th>
                </tr>
                <tr style="color:white">

                    <th style="background-color: #192530; font-size: medium; "> WeekDays  </th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-calendar-day"></i>  Sun</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-calendar-day"></i>  Mon</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-calendar-day"></i>  Tue</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-calendar-day"></i>  Wen</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-calendar-day"></i>  Thur</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-calendar-day"></i>  Fri</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-calendar-day"></i>  Sat</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-bookmark"></i> Total Hrs</th>
                    <th style="background-color: #192530; font-size: medium; "><i class="fa fa-circle-notch"></i> Status</th>
                    <th style="background-color: #192530; font-size: medium; ">  Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        @if (item.Status == 0)
                        {
                            <td style="background-color: #0656A5; color: white ">

                                @{
                                    string input = @item.Weekid.ToString(); // Your input string

                                    // Assuming the format is Week{X},Month{Y},Year{Z}

                                    // Extracting week, month, and year from the input string
                                    int week = int.Parse(input.Substring(0, 1)); // Assuming week number is in the first position
                                    int month = int.Parse(input.Substring(1, 2)); // Assuming month number is in the second and third positions
                                    int year = int.Parse(input.Substring(3)); // Assuming year is in the last four positions

                                    // Converting month number to month name
                                    string monthName = System.Globalization.DateTimeFormatInfo.CurrentInfo.GetMonthName(month);

                                    // Formatted result string
                                    string formattedDate = $": {week}, of {monthName},{year}";
                                }

                                <i class="fa fa-circle-notch text-white"></i> Week @formattedDate
                            </td>
                        }
                        else
                        {
                            <td style="background-color: #575757; color: white ">
                                <i class="fa fa-circle-notch text-white"></i> Week No  @item.Weekid

                            </td>
                        }
                        <td style="background-color: white;">
                            @if (item.Status == 0)
                            {<a href="@Url.Action("add", "Activities", new {id =item.Id, id2 = "Sun" })"> <span class="badge badge-primary"><medium><i class="fa fa-clock"></i>  @item.Sun Hrs </medium></span></a>}
                        else
                        { <span class="badge badge-secondary"><medium><i class="fa fa-clock"></i> @item.Sun Hrs </medium></span>}
                        </td>
                        <td style="background-color: white;">
                            @if (item.Status == 0)
                            {<a href="@Url.Action("add", "Activities", new {id =item.Id, id2 = "Mon" })"> <span class="badge badge-primary"><medium><i class="fa fa-clock"></i> @item.Mon Hrs </medium></span></a>}
                        else
                        { <span class="badge badge-secondary"><medium><i class="fa fa-clock"></i> @item.Mon Hrs </medium></span>}
                        </td>
                        <td style="background-color: white;">
                            @if (item.Status == 0)
                            {<a href="@Url.Action("add", "Activities", new {id =item.Id, id2 = "Tue" })"> <span class="badge badge-primary"><medium><i class="fa fa-clock"></i> @item.Tue Hrs </medium></span> </a>}
                        else
                        { <span class="badge badge-secondary"><medium><i class="fa fa-clock"></i> @item.Tue Hrs </medium></span>}
                        </td>
                        <td style="background-color: white;">
                            @if (item.Status == 0)
                            {<a href="@Url.Action("add", "Activities", new {id =item.Id, id2 = "Wen" })"> <span class="badge badge-primary"><medium><i class="fa fa-clock"></i> @item.Wen Hrs </medium></span> </a>}
                        else
                        { <span class="badge badge-secondary"><medium><i class="fa fa-clock"></i> @item.Wen Hrs </medium></span>}
                        </td>
                        <td style="background-color: white;">
                            @if (item.Status == 0)
                            {<a href="@Url.Action("add", "Activities", new {id =item.Id, id2 = "Thur" })"> <span class="badge badge-primary"><medium><i class="fa fa-clock"></i> @item.Thur Hrs </medium></span> </a>}
                        else
                        { <span class="badge badge-secondary"><medium><i class="fa fa-clock"></i> @item.Thur Hrs </medium></span>}
                        </td>
                        <td style="background-color: white;">
                            @if (item.Status == 0)
                            {<a href="@Url.Action("add", "Activities", new {id =item.Id, id2 = "Fri" })"> <span class="badge badge-primary"><medium><i class="fa fa-clock"></i> @item.Fri Hrs </medium></span> </a>}
                        else
                        { <span class="badge badge-secondary"><medium><i class="fa fa-clock"></i> @item.Fri Hrs </medium></span>}
                        </td>
                        <td style="background-color: white;">
                            @if (item.Status == 0)
                            {<a href="@Url.Action("add", "Activities", new {id =item.Id, id2 = "Sat" })"> <span class="badge badge-primary"><medium><i class="fa fa-clock"></i> @item.Sat Hrs </medium></span> </a>}
                        else
                        { <span class="badge badge-secondary"><medium><i class="fa fa-clock"></i> @item.Sat Hrs </medium></span>}
                        </td>
                        <td style="background-color: #040148;color:white">
                            <a href="@Url.Action("Details", "Timesheet", new {id =item.Id })"> <span class="badge badge-warning"><medium><i class="fa fa-clock"></i> @item.Tt Hrs  </medium></span> </a>
                        </td>
                        <td style="background-color: white;">

                            @if (item.Status == 0)
                            {<small> <b style="color:red"><i class="fa fa-circle-notch"></i> Pending Submission</b></small>}
                            else if (item.Status == 1)
                            {<small> <b style="color:green"><i class="fa fa-check-circle"></i> Submitted</b></small>}
                            else
                            { <small> <b style="color:green"><i class="fa fa-check-double"></i> Approved </b></small>}

                        </td>
                        <td style="background-color: white; ">
                            @if (item.Status == 0)
                            {<div class="btn-group dropdown">
                                    <button type="button" class="btn btn-xs btn-outline-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa fa-hashtag"></i>  . Action
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">

                                        <a href="@Url.Action("Submit", "Timesheet", new { id = item.Id })" class="dropdown-item">
                                            <i class="fa fa-check-circle text-primary"></i> Submit Week' sheet
                                        </a>
                                    </div>
                                </div>
                            }
                            else
                            {<div class="btn-group dropdown">
                                    <button type="button" class="btn btn-xs btn-outline-primary disabled dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa fa-hashtag"></i>  . Action
                                    </button>

                                </div>
                            }
                        </td>
                    </tr>
                }

            </tbody>
        </table>
       

        <div class="dropdown-divider"></div>
        <div class="col d-flex justify-content-end">


            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title"><small><i class="fa fa-envelope"></i> @ViewBag.userinfo.Email</small></h5>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
        </div>


        <!-- /.col -->

        <style>
            .ul.pagination {
                display: inline-block;
                padding: 1;
                margin: 1;
                border-radius: 0.5rem;
            }

            ul.pagination li {
                display: inline;
            }

                ul.pagination li a {
                    color: black;
                    float: left;
                    padding: 8px 16px;
                    text-decoration: none;
                    transition: background-color;
                    background-color: #ddd;
                    border-color: white;
                    border-radius: 0.5rem;
                }

                    ul.pagination li a.active {
                        background-color: dodgerblue;
                        color: white;
                    }

                    ul.pagination li a:hover:not(.active) {
                        background-color: dodgerblue;
                        border-radius: 0.5rem;
                    }
        </style>
        <div id="container" style="text-align:left">

            <div class="pagination" style="text-align:left">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["SearchBy"], search = Request.QueryString["Search"] })
              , new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayLinkToIndividualPages = true })
            </div>
        </div>
    </div>



