@model IShop.Core.leave

@{
    ViewBag.Title = "Approve_leave";
}



<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }

    .form-rounded2 {
        border-radius: 1rem;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>


<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }



    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    hr {
        border: none;
        color: black;
        background-color: greenyellow;
        height: 1px;
        width: 100%;
    }
    .curved-table {
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
    }

        .curved-table th,
        .curved-table td {
            padding: 10px;
            border: 1px solid black;
        }
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script>
    $(function () {
        $("#datepicker").datepicker();
    });
    $(function () {
        $("#datepicker2").datepicker();
    });
</script>


@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->

<div class="col d-flex justify-content-center">
    <div class="col-md-12 col-sm-12 col-12">
        <div class="card mb- mb-xl-0" style="border-radius: 24px;">
            <div class="card-header" style="background-color: #001F3F;color:white">
                <i class="fa fa-check-circle text-white nav-icon"></i> Approve/Deny leave
            </div>
            <div class="card-body">



                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })






                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-calendar text-warning"></i> @Html.LabelFor(model => model.CreatedOn) </label>
                            @Html.EditorFor(model => model.CreatedOn, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-user-circle text-warning"></i> @Html.LabelFor(model => model.Employee) </label>
                            @Html.EditorFor(model => model.Employee, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-envelope text-warning"></i> @Html.LabelFor(model => model.Emp_Mail) </label>
                            @Html.EditorFor(model => model.Emp_Mail, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-phone text-warning"></i> @Html.LabelFor(model => model.phone) </label>
                            @Html.EditorFor(model => model.phone, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-cube text-warning"></i> @Html.LabelFor(model => model.Department) </label>
                            @Html.EditorFor(model => model.Department, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-envelope text-warning"></i> @Html.LabelFor(model => model.HR_Email) </label>
                            @Html.EditorFor(model => model.HR_Email, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-calendar text-warning"></i> @Html.LabelFor(model => model.From_Date) </label>
                            @Html.EditorFor(model => model.From_Date, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-calendar text-warning"></i> @Html.LabelFor(model => model.To_Date) </label>
                            @Html.EditorFor(model => model.To_Date, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-calendar text-success"></i> @Html.LabelFor(model => model.Return_Date) </label>
                            @Html.EditorFor(model => model.Return_Date, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-1">
                            <label><i class="fa fa-hourglass text-success"></i> @Html.LabelFor(model => model.Requested_Days) </label>
                            @Html.EditorFor(model => model.Requested_Days, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-circle-notch text-orange"></i> @Html.LabelFor(model => model.Type) </label>
                            @Html.EditorFor(model => model.Type, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-barcode text-orange"></i> @Html.LabelFor(model => model.PF_NO) </label>
                            @Html.EditorFor(model => model.PF_NO, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",


                               @Readonly = true

                           }
                       })

                        </div>
                    </div>
                    <label class="bwe">
                        <i class="fa fa-comment text-yellow"></i>
                        leave additional information
                    </label>
                    <div class="form-row">


                        @Html.TextAreaFor(model => model.Message, 2, 40, htmlAttributes: new
                   {
                       style = "width: 40%; max-width:40%;",
                       @placeholder = "File Description ...information on thes uploaded file",
                       @autofocus = ""
    ,
                       @class = "form-control form-rounded7",
                       @Readonly = true
                   })

                    </div>

                    <hr />
                    <div>

                        <div class="table-responsive">
                            <table class="table  table-hover  text-nowrap curved-table">

                                <thead>
                                    <tr style="color:white">
                                        <th style="background-color: #343A40; width: 10% "><medium>Approver Status </medium></th>
                                        <th style="background-color: #343A40; width: 20% "> <medium>Approval Date</medium></th>

                                        <th style="background-color: #343A40; width: 10% "><medium>Approver</medium> </th>





                                        <th style="background-color: #343A40; width: 60%"><medium>Approver Remarks </medium></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in ViewBag.F)
                                    {
                                        <tr data-widget="expandable-table" aria-expanded="false">
                                            <td style="background-color:white">
                                                @if (item.Approver_status == "1" || item.Approver_status == "2")
                                                {<span class="badge  rounded-pill  bg-gradient-success">
                                                        <b style="color:white">
                                                            <i class=" fa fa-check-circle"></i>  APPROVED
                                                        </b>
                                                    </span>}
                                                else
                                                { <b style="color:brown"><i class=" fa fa-times-circle"></i>  DENIED</b>}
                                            </td>
                                            <td style="background-color:white"><i class="fa fa-calendar text-orange"></i> @item.CreatedOn</td>
                                            <td style="background-color:white"><i class="fa fa-user-check text-orange"></i> @item.Approver</td>

                                            <td style="background-color:white"><i class=" fa fa-comment text-orange"></i> @item.Approver_remarks</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                    <hr />
                    <div>
                        @if (Model.Status == "1")
                        {<div class="form-group col-md-3">
                                <label><i class="fa fa-handshake text-warning"></i> @Html.LabelFor(model => model.Status)</label>
                                @{
                                    List<SelectListItem> b = new List<SelectListItem>();
                                    b.Add(new SelectListItem
                                    {
                                        Text = "Approved",
                                        Value = "2",
                                    });
                                    b.Add(new SelectListItem
                                    {
                                        Text = "Denied",
                                        Value = "99",
                                    });


                                }@Html.DropDownListFor(model => model.Status, b, "---Select Approval status---",
                            new { @class = "form-control form-control-sm", @required = "required" })
                            </div>

                        }
                        else
                        { <div class="form-group col-md-3">
                                <label><i class="fa fa-handshake text-warning"></i> @Html.LabelFor(model => model.Status)</label>
                                @{
                                    List<SelectListItem> b = new List<SelectListItem>();
                                    b.Add(new SelectListItem
                                    {
                                        Text = "Approved",
                                        Value = "1",
                                    });
                                    b.Add(new SelectListItem
                                    {
                                        Text = "Denied",
                                        Value = "99",
                                    });


                                }@Html.DropDownListFor(model => model.Status, b, "---Select Approval status---", new { @class = "form-control form-control-sm", @required = "required" })
                            </div>}
                    </div>
                    <div class="dropdown-divider"></div>
                    <label><i class="fa fa-comment text-warning"></i> @Html.LabelFor(model => model.Approver_Remarks)</label>


                    <script>
                        window.onload = function () {
                            document.getElementById("Approver_Remarks").value = "";
                        }
                    </script>
                    <div class="form-row">


                        @Html.TextAreaFor(model => model.Approver_Remarks, 3, 60, htmlAttributes: new
                   {
                       style = "width: 60%; max-width:60%;",
                       @placeholder = "Approver remarks",
                       @autofocus = "",
                       @value = ""
,
                       @class = "form-control form-rounded7",
                       @required = "required"

                   })



                    </div>

                    <hr />
                    <div>
                        <input type="submit" value="Submit" class="btn btn btn-success" style="color:white" onclick="return confirm('Are you sure you want to proceed?')" />


                        <script>
                            $(function () {
                                $('#Create').click(function () {
                                    if (confirm('Are you sure?')) {
                                        window.location.href = $(this).data('url');
                                    }
                                });
                            });
                        </script>
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                    </div>
                }

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
            </div>
        </div>
    </div>
</div>