@model IShop.Core.Days_leave

@{
    ViewBag.Title = "Add days";
}

<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }

    form-rounded2 {
        border-radius: 4rem;
        border-color: orangered;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>


<!-- Main content -->

<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }



    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    hr {
        border: none;
        color: black;
        background-color: greenyellow;
        height: 1px;
        width: 100%;
    }
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script>
    $(function () {
        $("#datepicker").datepicker({
            dateFormat: 'yy-mm-dd',
            minDate: 0,
            onSelect: function () {
                calculateDays();
            }
        });
    $(function () {
        $("#datepicker2").datepicker({
            dateFormat: 'yy-mm-dd',
            minDate: 0,
            onSelect: function () {
                calculateDays();
            }
        });
        $(function () {
            $("#datepicker3").datepicker({
                dateFormat: 'yy-mm-dd',
                minDate: 0,
                onSelect: function () {
                    calculateDays();
                }
            });
</script>


@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->






<br />
<div class="col d-flex justify-content-center">
    <div class="col-md-9 col-sm-12 col-12">
        <div class="card mb- mb-xl-0" style="border-radius: 24px;">
            <div class="card-header" style="background-color: #0656A5; color: white; border-radius: 14px ">
                <i class="fa fa-bookmark"></i> leave Days
            </div>
            <div class="card-body" style="background-color: white;border-radius: 24px;">
                <div class="card-body" style="background-color: #ffffffc1;border-radius: 24px;">
                    @using (Html.BeginForm("create", "Days_leave", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <form>


                        <div class="form-row">
                            <div class="form-group col-md-2">
                                <label><i class=" fa fa-tag text-primary"></i>   @Html.LabelFor(model => model.Leave_Id)</label>
                                @Html.EditorFor(model => model.Leave_Id, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @Placeholder = "Record",
                                   @Value = ViewBag.leaveid,
                                   @ReadOnly = true,


                               }
                           })

                            </div>


                            <div class="form-group col-md-4">
                                <label> <i class="fa fa-umbrella-beach text-primary"></i> @Html.LabelFor(model => model.Type)</label>
                                @Html.DropDownList("Type", ViewBag.Categories as SelectList, "-- Select Leave Type --",
                               new { @class = "form-control ", @required = "required", data_live_search = "true" })
                            </div>

                            <script type="text/javascript">
                                $(function () {

                                    $("#Type").chosen();


                                });
                            </script>

                            <div class="form-group col-md-3">
                                <label><i class="fa fa-spinner text-orange"></i> @Html.LabelFor(model => model.Time) </label>
                                @{
                                    List<SelectListItem> m = new List<SelectListItem>();
                                    m.Add(new SelectListItem
                                    {
                                        Text = "All Day leave",
                                        Value = "1",
                                    });
                                    m.Add(new SelectListItem
                                    {
                                        Text = "Half day leave",
                                        Value = "2",
                                    });

                                }@Html.DropDownListFor(model => model.Time, m, "---Leave Period---", new { @class = "form-control form-control-sm", @required = "required", @id = "Time" })
                            </div>
                            <!-- Include jQuery -->
                            <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
                        </div>
                        <div class="form-row">



                            <div class="form-group col-md-3">
                                <label><i class="fa fa-calendar-day text-primary"></i> @Html.LabelFor(model => model.From_Date)</label>
                                @Html.EditorFor(model => model.From_Date, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control form-control-sm datepicker",
                                        @placeholder = "From_Date",
                                        id = "datepicker",
                                        @required = "required"
                                    }
                                })
                            </div>
                            <div class="form-group col-md-3">
                                <label><i class="fa fa-calendar-day text-primary"></i> @Html.LabelFor(model => model.To_Date)</label>
                                @Html.EditorFor(model => model.To_Date, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control form-control-sm datepicker",
                                        @placeholder = "To Date",
                                        id = "datepicker2",
                                        @required = "required"
                                    }
                                })
                            </div>
                            <div class="form-group col-md-3">
                                <label><i class="fa fa-calendar-day text-primary"></i> @Html.LabelFor(model => model.Return_Date)</label>
                                @Html.EditorFor(model => model.Return_Date, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control form-control-sm datepicker",
                                        @placeholder = "To Date",
                                        id = "datepicker3",
                                        @required = "required"
                                    }
                                })
                            </div>
                            <div class="form-group col-md-2">
                                <label><i class="fa fa-bookmark text-primary"></i> @Html.LabelFor(model => model.Days)</label>
                                @Html.EditorFor(model => model.Days, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @placeholder = "Days",
                                   @readonly = "readonly",
                                   @Id = "Days"
                               }
                           })
                            </div>
                            <script>
                                $(document).ready(function () {
                                    // Attach datepicker to date fields
                                    $(".datepicker").datepicker({
                                        dateFormat: 'yy-mm-dd',
                                        minDate: 0,
                                        onSelect: function () {
                                            // Trigger calculateDays on date selection
                                            calculateDays();
                                        }
                                    });

                                    // Trigger calculateDays when either From_Date or To_Date changes
                                    $("#datepicker, #datepicker2, #Time").change(function () {
                                        calculateDays();
                                    });

                                    // Calculate days function
                                    function calculateDays() {
                                        var fromDate = $("#datepicker").datepicker("getDate");
                                        var toDate = $("#datepicker2").datepicker("getDate");
                                        var timeDropdownValue = $("#Time").val();

                                        if (fromDate && toDate) {
                                            var daysDiff = calculateWeekdays(fromDate, toDate);

                                            // Adjust the days based on the selected value in the Time dropdown
                                            if (timeDropdownValue === "2") { // "Half Day leave"
                                                daysDiff /= 2;
                                            }

                                            // Set the calculated days to the Days textbox
                                            $("#Days").val(daysDiff);

                                            // Debugging statement
                                            console.log("Days calculated:", daysDiff);
                                        } else {
                                            // Debugging statement
                                            console.log("Invalid date range");
                                        }
                                    }

                                    // Calculate weekdays function (excluding weekends)
                                    function calculateWeekdays(fromDate, toDate) {
                                        var daysDiff = 0;
                                        var currentDate = new Date(fromDate);

                                        while (currentDate <= toDate) {
                                            var dayOfWeek = currentDate.getDay();
                                            if (dayOfWeek !== 0 && dayOfWeek !== 6) { // Exclude Sunday (0) and Saturday (6)
                                                daysDiff++;
                                            }
                                            currentDate.setDate(currentDate.getDate() + 1);
                                        }

                                        return daysDiff;
                                    }

                                    // Trigger calculateDays on the initial page load
                                    calculateDays();
                                });
                            </script>






                        </div>
                        <div class="dropdown-divider"></div>
                        <input type="submit" value="Submit" class="btn btn-warning" />

                        <a href="@Request.UrlReferrer" class="btn btn-primary">Back</a>
                    </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>