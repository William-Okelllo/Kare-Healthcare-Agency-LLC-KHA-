@model IShop.Core.Job

@{
    ViewBag.Title = "Create";
}

<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }

    form-rounded2 {
        border-radius: 4rem;
        border-color: orangered;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>


<!-- Main content -->

<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }



    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    hr {
        border: none;
        color: black;
        background-color: greenyellow;
        height: 1px;
        width: 100%;
    }
</style>



@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->

<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script>
    $(function () {
        $("#datepicker").datepicker();
    });
    
</script>




        <div class="col d-flex justify-content-center">
            <div class="col-md-11 col-sm-12 col-12">
                <div class="card mb- mb-xl-4" style="border-radius: 24px;">
                    <div class="card-header" style="background-color: #076f79d4; color: white; border-radius: 14px ">
                        <i class="bx bxs-hand-up"></i>  Post Job
                    </div>
                    <div class="card-body" style="background-color: white;border-radius: 24px;">
                        <div class="card-body" style="background-color: #ffffffc1;border-radius: 24px;">

                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })





                                <div class="form-group row">
                                    <div class="form-group col-md-3">
                                        <medium style="color:black"><i class="fa fa-calendar text-success"></i> @Html.LabelFor(model => model.Title)</medium>
                                        @Html.EditorFor(model => model.Title, new
                                   {
                                       htmlAttributes = new
                                       {
                                           @class = "form-control form-control ",
                                           @placeholder = " Job Title",

                                           @required = "required",
                                       }
                                   })
                                    </div>
                                    <div class="form-group col-md-3">
                                        <medium style="color:black"><i class="bx bxs-layer"></i> @Html.LabelFor(model => model.Sector)</medium>
                                        @{
                                            List<SelectListItem> m = new List<SelectListItem>();
                                            m.Add(new SelectListItem
                                            {
                                                Text = "Education",
                                                Value = "Education",
                                            });
                                            m.Add(new SelectListItem
                                            {
                                                Text = "Information Technology",
                                                Value = "Information Technology",
                                            });
                                            m.Add(new SelectListItem
                                            {
                                                Text = "HealthCare",
                                                Value = "HealthCare",
                                            });


                                        }@Html.DropDownListFor(model => model.Sector, m, "--Sector---", new { @class = "form-control form-control", @required = "required", })
                                    </div>
                                    <div class="form-group col-md-3">
                                        <medium style="color:black"> <i class="bx bx-timer"></i> @Html.LabelFor(model => model.Experience)</medium>
                                        @{
                                            List<SelectListItem> q = new List<SelectListItem>();
                                            q.Add(new SelectListItem
                                            {
                                                Text = "1 year",
                                                Value = "1 year",
                                            });
                                            q.Add(new SelectListItem
                                            {
                                                Text = "2 years",
                                                Value = "2 years",
                                            });
                                            q.Add(new SelectListItem
                                            {
                                                Text = "3 years",
                                                Value = "# years",
                                            });


                                        }@Html.DropDownListFor(model => model.Experience, q, "---Work Experience---", new { @class = "form-control form-control", @required = "required", })
                                    </div>
                                    <div class="form-group col-md-3">
                                        <medium style="color:black"><i class="bx bx-calendar text-danger"></i> @Html.LabelFor(model => model.Application_Deadline)</medium>
                                        @Html.EditorFor(model => model.Application_Deadline, new
                                   {
                                       htmlAttributes = new
                                       {
                                           @class = "form-control form-control ",
                                           @placeholder = " Application_Deadline",
                                           id = "datepicker",
                                                @Type = "Date",
                                           @required = "required",
                                       }
                                   })
                                    </div>
                                </div>
                                <hr />
                                <div class="form-group row">
                                    <div class="form-group col-md-3">
                                        <medium style="color:black"> <i class="bx bx-vector"></i> @Html.LabelFor(model => model.Qualifications)</medium>
                                        @{
                                            List<SelectListItem> x = new List<SelectListItem>();
                                            x.Add(new SelectListItem
                                            {
                                                Text = "Bachelor",
                                                Value = "Bachelor",
                                            });
                                            x.Add(new SelectListItem
                                            {
                                                Text = "Diploma",
                                                Value = "Diploma",
                                            });
                                            x.Add(new SelectListItem
                                            {
                                                Text = "Certificate",
                                                Value = "Certificate",
                                            });


                                        }@Html.DropDownListFor(model => model.Qualifications, x, "---Work Qualifications---", new { @class = "form-control form-control", @required = "required", })
                                    </div>


                                    <div class="form-group col-md-3">
                                        <medium style="color:black"> <i class="bx bx-vector"></i> @Html.LabelFor(model => model.Type)</medium>
                                        @{
                                            List<SelectListItem> g = new List<SelectListItem>();
                                            g.Add(new SelectListItem
                                            {
                                                Text = "Contract",
                                                Value = "Contract",
                                            });
                                            g.Add(new SelectListItem
                                            {
                                                Text = "FullTime",
                                                Value = "FullTime",
                                            });
                                            g.Add(new SelectListItem
                                            {
                                                Text = "Internship",
                                                Value = "Internship",
                                            });
                                            g.Add(new SelectListItem
                                            {
                                                Text = "Temporary",
                                                Value = "Temporary",
                                            });


                                        }@Html.DropDownListFor(model => model.Type, g, "---Work Type---", new { @class = "form-control form-control", @required = "required", })
                                    </div>
                                    <div class="form-group col-md-2">
                                        <label style="color:black"> <i class="bx bx-money"></i> @Html.LabelFor(model => model.Salary) </label>
                                        @Html.EditorFor(model => model.Salary, new
                                   {
                                       htmlAttributes = new
                                       {
                                           @class = "form-control ",
                                           @Placeholder = "Salary",
                                           @required = "required",
                                           onchange = "addCommas(this)",

                                       }
                                   })



                                    </div>
                                    <script>
                                        function addCommas(element) {
                                            var value = parseFloat(element.value.replace(/,/g, ''));
                                            element.value = value.toLocaleString('en-US');
                                        }
                                        $(function () {
                                            $('form').submit(function () {
                                                var amountString = $('#Salary').val();
                                                var amountWithoutCommas = amountString.replace(/,/g, '');
                                                $('#Salary').val(amountWithoutCommas);



                                            });
                                    </script>
                                </div>
                                <hr />
                                <div class="form-group row">
                                    <div class="form-group col-md-3">
                                        <medium style="color:black"> <i class="bx bx-book-bookmark"></i> @Html.LabelFor(model => model.Application_Type)</medium>
                                        @{
                                            List<SelectListItem> w = new List<SelectListItem>();
                                            w.Add(new SelectListItem
                                            {
                                                Text = "Internal",
                                                Value = "Internal",
                                            });
                                            w.Add(new SelectListItem
                                            {
                                                Text = "External",
                                                Value = "External",
                                            });
                                            

                                        }@Html.DropDownListFor(model => model.Application_Type, w, "---Application_Type---", new { @class = "form-control form-control", @required = "required", })
                                    </div>
                                    </div>
                                    <hr />
                            <div class="form-group row">
                                        <p style="font-family:Calibri;color:black">
                                            <i class="bx bx-comment"></i>
                                            Job  Description
                                        </p>
                                        <div class="form-row">


                                            @Html.TextAreaFor(model => model.Description, 4, 70, htmlAttributes: new
                                       {
                                           style = "width: 70%; max-width:70%;",
                                           @placeholder = "Overall remarks",
                                           @autofocus = "",
                                                @required = true
                                           ,
                                           @class = "form-control form-rounded2",


                                       })
                                        </div>
                                    </div>
                                    <hr />

                                    <input type="submit" value="Post Job" class="btn btn btn-success" style="color:white" onclick="return confirm('Are you sure you want to post this Income?')" />


                                    <script>
                                        $(function () {
                                            $('#Create').click(function () {
                                                if (confirm('Are you sure?')) {
                                                    window.location.href = $(this).data('url');
                                                }
                                            });
                                        });
                                    </script>
                                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                                    <input type="reset" value="Reset" class="btn btn-danger" style="color:white" />
                                    }
                                </div>
                            </div>
                </div>
            </div>
        </div>
