@model IShop.Core.Recovery

@{
    ViewBag.Title = "New Recovery";
}


<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }

    .form-rounded2 {
        border-radius: 1rem;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>


<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }



    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    hr {
        border: none;
        color: black;
        background-color: greenyellow;
        height: 1px;
        width: 100%;
    }
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>


@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->
<br />
<div class="col d-flex justify-content-center">
    <div class="col-md-8 col-sm-12 col-12">
        <div class="card mb- mb-xl-0" style="border-radius: 24px;">
            <div class="card-header" style="background-color: #001F3F;color:white">
                <i class="fa fa-piggy-bank text-white nav-icon"></i> New Recovery  
            </div>
            <div class="card-body">



                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })






                <div class="form-row">
                    <div class="form-group col-md-1">
                        <label><i class="fa fa-circle-notch text-orange"></i> Id </label>
                        @foreach (var item in ViewBag.l2)
                        {
                            <input id="Ticket_id" name="Ticket_id" type="text" value="@item.id" class="form-control " readonly />
                        }
                    </div>
                    <div class="form-group col-md-3">
                        <label><i class="fa fa-qrcode text-orange"></i> Ticket/Ref No </label>
                        @foreach (var item in ViewBag.l2)
                        {
                            <input id="Ticket_id" name="Ticket_No" type="text" value="@item.Ticket_No" class="form-control " readonly />
                        }
                    </div>
                    <div class="form-group col-md-4">
                        <label><i class="fa fa-calendar text-orange"></i> Posted On </label>
                        @Html.EditorFor(model => model.CreatedOn, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control ",

                           @Value = DateTime.Now,
                           @Readonly = true

                       }
                   })

                    </div>
                </div>

                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label><i class="fa fa-spinner text-orange"></i> @Html.LabelFor(model => model.Inv_No) </label>
                            @Html.EditorFor(model => model.Inv_No, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control ",
                               @Placeholder = "Invoice Number",
                               @required = "required",


                           }
                       })

                        </div>
                        <div class="form-group col-md-5">
                            <label>..</label><br />
                            @foreach (var item in ViewBag.l2)
                            {


                                <p style="color:navy">
                                    <div class="spinner-border spinner-border-sm" role="status" style="color:orangered">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                    <div class="spinner-grow spinner-grow-sm" role="status" style="color: orangered">
                                        <span class="sr-only">Loading...</span>
                                    </div>  Recovery Amount on ticket @item.Recovery
                                </p>



                            }
                        </div>
                            

                        
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label><i class="fa fa-circle-notch text-orange"></i> @Html.LabelFor(model => model.Inv_Amount) </label>
                            @foreach (var item in ViewBag.l2)
                            {
                                <input id="Inv_Amount" name="Inv_Amount" type="text" value="@item.Recovery" class="form-control form-rounded" readonly />
                            }
                        </div>
                        
                        <div class="form-group col-md-3">
                            <label><i class="fa fa-circle-notch text-orange"></i> @Html.LabelFor(model => model.Amount_Recovered) </label>
                            @Html.EditorFor(model => model.Amount_Recovered, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-rounded",
                               @Placeholder = "0.0",
                               @required = "required",
                               


                           }
                       })

                        </div>
                        
                            <script>
                                $(function () {
                                    $('#Amount_Recovered').on('change', function () {
                                        var amount = parseFloat($('#Inv_Amount').val());
                                        var newAmount = parseFloat($('#textbox2').val());
                                        if (newAmount > amount) {
                                            $('#Amount_Recovered').val(amount);
                                        }
                                    });
                            });
                        
                        </script>
                        <div class="form-group col-md-3">
                            <label><i class="fa fa-circle-notch text-orange"></i> @Html.LabelFor(model => model.Balance) </label>
                            @Html.EditorFor(model => model.Balance, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-rounded",
                               @Placeholder = "0.0",

                                    @Readonly = true,


                           }
                       })

                        </div>
                        <div class="form-group col-md-2">
                            <label><i class="fa fa-user-circle text-orange"></i> @Html.LabelFor(model => model.Staff) </label>
                            @Html.EditorFor(model => model.Staff, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control  form-rounded-sm",
                               @Value = User.Identity.Name,
                               @Readonly = true,


                           }
                       })

                        </div>
                        <script>
                            $(document).ready(function () {
                                //this calculates values automatically
                                sum();
                                $("#Inv_Amount, #Amount_Recovered").on("keydown keyup", function () {
                                    sum();
                                });
                            });
                            function sum() {
                                var num1 = document.getElementById('Inv_Amount').value;
                                var num2 = document.getElementById('Amount_Recovered').value;
                                var result = parseFloat(num1) - parseFloat(num2);
                                if (!isNaN(result)) {
                                    document.getElementById('Balance').value = result;
                                }
                            }
                        </script>
                    </div>





                        <div style="color:red">@Html.ValidationMessageFor(y => y.Inv_Amount)</div>
                        <div style="color:red">@Html.ValidationMessageFor(y => y.Amount_Recovered)</div>


                        <small><i class="fa fa-sticky-note text-primary"></i> The Recovered Amount will be auto-deducated form the recovery amount on the orign ticket</small>
                        <hr />


                        <table>
                            <thead>
                                <tr>

                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                            <td style="text-align:left">

                                <input type="submit" value="Submit Recovery" class="btn btn btn-primary" style="color:white" onclick="return confirm('Are you sure you want to submit?')" />


                                <script>
                                    $(function () {
                                        $('#Create').click(function () {
                                            if (confirm('Are you sure?')) {
                                                window.location.href = $(this).data('url');
                                            }
                                        });
                                    });
                                </script>

                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                                <input type="reset" value="Reset" class="btn btn-danger" style="color:white" />



                            </td>
                            </tbody>
                        </table>

                        }

                        </form>





















                        @section Scripts {
                            @Scripts.Render("~/bundles/jqueryval")
                        }



                    </div>
        </div>
    </div>
</div>