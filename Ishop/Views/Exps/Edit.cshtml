@model IShop.Core.Exp

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm("Edit", "Exps", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="row">

        <script type="text/javascript">
            $(function () {

                $("#dType").chosen();


            });
        </script>


        <div class="form-group col-md-8">
            <label><i class="fa fa-bookmark text-purple"></i>   @Html.LabelFor(model => model.Type)</label>
            @{
                List<SelectListItem> b = new List<SelectListItem>();
                b.Add(new SelectListItem
                {
                    Text = "Salary",
                    Value = "Salary",
                });
                b.Add(new SelectListItem
                {
                    Text = "Technology Software & Training",
                    Value = "Technology Software & Training",
                });
                b.Add(new SelectListItem
                {
                    Text = "Admin/Indirect costs",
                    Value = "Admin/Indirect costs",
                });
                b.Add(new SelectListItem
                {
                    Text = "Travel",
                    Value = "Travel",
                });
                b.Add(new SelectListItem
                {
                    Text = "Other",
                    Value = "Other",
                });
                b.Add(new SelectListItem
                {
                    Text = "Contracted services",
                    Value = "Contracted services",
                });
            }@Html.DropDownListFor(model => model.Type, b, "---Select Type---", new { @class = "form-control form-control-sm", @required = "required", })
        </div>
        <div class="form-group col-md-4">
            <label><i class="fa fa-book-reader text-purple"></i>   @Html.LabelFor(model => model.Budget)</label>
            @Html.EditorFor(model => model.Budget, new
       {
           htmlAttributes = new
           {
               @class = "form-control form-control-sm",
               @Placeholder = "Budget",
               @Required = true
           }
       })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <label><i class="fa fa-book-reader text-purple"></i>   @Html.LabelFor(model => model.Expenditures)</label>
            @Html.EditorFor(model => model.Expenditures, new
       {
           htmlAttributes = new
           {
               @class = "form-control form-control-sm",
               @Placeholder = "Expenditures",
               @Required = true
           }
       })
        </div>
        <div class="form-group col-md-6">
            <label><i class="fa fa-book-reader text-purple"></i>   @Html.LabelFor(model => model.Available)</label>
            @Html.EditorFor(model => model.Available, new
       {
           htmlAttributes = new
           {
               @class = "form-control form-control-sm",
               @Placeholder = "Available",
               @Readonly = true
           }
       })
        </div>
        <div class="form-group col-md-6" style="display: none">
            <label><i class="fa fa-book-reader text-purple"></i>   @Html.LabelFor(model => model.Budget_Id)</label>
            @Html.EditorFor(model => model.Budget_Id, new
       {
           htmlAttributes = new
           {
               @class = "form-control form-control-sm",
               @Readonly = true
           }
       })
        </div>
        <div class="form-group col-md-2" style="display:none">
            <label><i class="fa fa-book-reader text-purple"></i>   @Html.LabelFor(model => model.Id)</label>
            @Html.EditorFor(model => model.Id, new
       {
           htmlAttributes = new
           {
               @class = "form-control form-control-sm",
               @Readonly = true
           }
       })
        </div>
        <div class="form-group col-md-4" style="display:nodne">
            <label><i class="fa fa-book-reader text-purple"></i>   @Html.LabelFor(model => model.Shared)</label>
            @Html.EditorFor(model => model.Shared, new
       {
           htmlAttributes = new
           {
               @class = "form-control form-control-sm",
               @Readonly = true
           }
       })
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            function updateAvailable() {
                var budget = parseFloat($('#Budget').val()) || 0;
                var expenditures = parseFloat($('#Expenditures').val()) || 0;

                if (expenditures > budget) {
                    alert('Expenditures cannot be greater than the budget.');
                    $('#Expenditures').val('');  // Clear the expenditures field
                }

                var available = budget - expenditures;
                $('#Available').val(available >= 0 ? available : 0);
            }

            $('#Budget, #Expenditures').on('input', function () {
                updateAvailable();
            });
        });
    </script>

    <div class="dropdown-divider"></div>
    <div class="form-group">
        <div class="col d-flex justify-content-center">
            <input type="submit" name="action" value="Update Budget Item " class="btn  btn-block btn-outline-success" onclick="return confirm('Proceed to update?')" />

            <script>
                $(function () {
                    $('#Create').click(function () {
                        if (confirm('Are you sure?')) {
                            window.location.href = $(this).data('url');
                        }
                    });
                });
            </script>


        </div>
    </div>

}


