@model IShop.Core.Direct_Activities

@{
    ViewBag.Title = "Create";
}


<style>

    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }



    curved-table {
        border-collapse: collapse;
        border-radius: 11px;
        overflow: hidden;
    }

    .curved-table th,
    .curved-table td {
        padding: 10px;
        border-radius: 11px;
        border: 1px solid #00000033;
    }
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script>
    $(function () {
        $("#datepicker").datepicker();
    });
    $(function () {
        $("#datepicker2").datepicker();
    });

</script>


@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->



<br />
<div class="col d-flex justify-content-center">
    <div class="col-md-11 col-sm-12 col-12">


        @using (Html.BeginForm("Add", "Direct_Activities", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })



            <form>


                <div class="card-header" style="background-color: #0656A5; color: white; border-radius: 14px ">

                    <i class="fa fa-bookmark"></i>  Project Time  @ViewBag.SelectedDate.ToString("dddd") @ViewBag.SelectedDate.ToString("dd") @ViewBag.SelectedDate.ToString("MMMM") @ViewBag.SelectedDate.ToString("MM/dd/yyyy")
                </div>
                <div class="card-body" style="background-color: white;border-radius: 24px;">



                    <div class="form-row">

                        <div class="form-group col-md-3" style="display:none">
                            <label><i class=" fa fa-calendar-check text-primary"></i>   @Html.LabelFor(model => model.CreatedOn)</label>
                            @Html.EditorFor(model => model.CreatedOn, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",
                               @Placeholder = "Record",
                               @Value = DateTime.Now,
                               @ReadOnly = true,


                           }
                       })

                        </div>
                        <div class="form-group col-md-2" style="display: none">
                            <label><i class="fa fa-tags text-primary"></i> @Html.LabelFor(model => model.Day_Date)</label>
                            @Html.EditorFor(model => model.Day_Date, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control form-control-sm",
                                    @Value = ViewBag.SelectedDate.ToString("MM/dd/yyyy"),
                                    @Readonly = true,

                                }
                            })
                        </div>





                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-1" style="display:nowne">
                            <label><i class="fa fa-user-circle text-primary"></i> @Html.LabelFor(model => model.User)</label>
                            @Html.EditorFor(model => model.User, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control form-control-sm",
                                    @Value = User.Identity.Name,
                                    @Readonly = true,

                                }
                            })
                        </div>
                        <div class="form-group col-md-4">
                            <label><i class="fa fa-suitcase text-primary"></i> @Html.LabelFor(model => model.Project_Name) </label>
                            @Html.DropDownList("Project_Name", ViewBag.Project as SelectList, "--Select Project  --", new { @class = "form-control ", @required = "required" })
                            <span class="text-danger" id="projectNameValidationMessage"></span>
                        </div>
                        <script>
                            $(document).ready(function () {
                                // Add a change event listener to the dropdown
                                $("#Project_Name").change(function () {
                                    // Check if a value is selected
                                    if ($(this).val() === "") {
                                        // If not, show the validation message
                                        $("#projectNameValidationMessage").text("Please fill out this field.");
                                    } else {
                                        // If a value is selected, clear the validation message
                                        $("#projectNameValidationMessage").text("");
                                    }
                                });
                            });
                        </script>
                        <div class="form-group col-md-4 " id="Name">
                            <label><i class="fa fa-clock text-primary"></i> @Html.LabelFor(model => model.Name) </label>
                            @Html.DropDownList("Name", new SelectList(new List<string>(), "Name"), "--Select Phase --", new { @class = "form-control", id = "assignedNamesDropdown", @required = "required" })
                        </div>











                        <script>
        $(document).ready(function () {
            $("#Project_Name").change(function () {
                var selectedProject = $(this).val();

                // Make an AJAX request to get assigned names for the selected project
                $.ajax({
                    url: '@Url.Action("GetAssignedNames", "Direct_Activities")',
                    type: 'GET',
                    data: { projectName: selectedProject },
                    success: function (result) {
                        // Update the "Name" dropdown with the retrieved names
                        var assignedNamesDropdown = $("#assignedNamesDropdown");
                        assignedNamesDropdown.empty();

                        $.each(result, function (index, name) {
                            assignedNamesDropdown.append('<option value="' + name + '">' + name + '</option>');
                        });
                    },
                    error: function () {
                        console.error('Error fetching assigned names');
                    }
                });
            });
        });
                        </script>






                        <script>
                            $(document).ready(function () {
                                // Hook up change event for the dropdown
                                $("#Project_Name").change(function () {
                                    toggleCommentsValidation();
                                });

                                // Toggle validation on initial load
                                toggleCommentsValidation();
                            });

                            function toggleCommentsValidation() {
                                // Get the selected value from the dropdown
                                var selectedValue = $("#Project_Name").val();

                                // Get the textarea element
                                var commentsTextArea = $("textarea[name='direct_Comments']");

                                // Set or remove 'required' attribute based on the selected value
                                commentsTextArea.prop("required", selectedValue !== "");
                            }
                        </script>
                        <script type="text/javascript">
                            $(function () {
                                $("#Project_Name").chosen();
                                $("#Categorylist").chosen();
                                $("#Indixrect").chosen();
                                $("#d").chosen();

                            });
                        </script>



                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3 ">
                            <label><i class="fa fa-bookmark text-primary"></i> @Html.LabelFor(model => model.Category) </label>
                            @Html.DropDownList("Category", ViewBag.Timec as SelectList, "--Select Time Category  --", new { @class = "form-control ", @required = "required", id = "Categorylist" })

                        </div>



                        <div class="form-group col-md-2">
                            <label><i class="fa fa-clock text-primary"></i> @Html.LabelFor(model => model.Hours)</label>
                            @Html.EditorFor(model => model.Hours, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",
                               @Placeholder = "No. of Hours",
                               @required = "required",
                                    id = "Hours" // Add an ID to the input field for easy access in JavaScript
                           }
                       })
                        </div>
                        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                        <script>
                            $(document).ready(function () {
                                $("#Hours").on("input", function () {
                                    var id = $(this).val();
                                    $.ajax({
                                        url: '/Direct_Activities/GetCharge',
                                        method: 'GET',
                                        data: { id: id },
                                        success: function (data) {
                                            if (data) {
                                                $("#Charge").val(data);
                                            } else {
                                                // Handle the case where data is empty
                                            }
                                        },
                                        error: function () {
                                            console.log('Error retrieving record data.');
                                        }
                                    });
                                });

                                // Function to format a number with commas for thousands

                            });
                        </script>
                        <div class="form-group col-md-2" style="display: none">
                            <label><i class="fa fa-cash-register text-primary"></i> @Html.LabelFor(model => model.Charge)</label>
                            @Html.EditorFor(model => model.Charge, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",
                               @Placeholder = " Estimate Charge",
                               @Readonly = true,
                               id = "Charge",
                               // Add an ID to the input field for easy access in JavaScript
                           }
                       })
                        </div>
                        <div class="form-group col-md-1">
                            <label><i class="fa fa-clock text-primary"></i> @Html.LabelFor(model => model.WeekNo)</label>
                            @Html.EditorFor(model => model.WeekNo, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control form-control-sm",
                               @Placeholder = " WeekNo",
                               @Readonly = true,
                               @Value = ViewBag.Weekid
                           }
                       })
                        </div>
                    </div>
                    <script>
                        // Add an event listener to the input field
                        document.getElementById("Hours").addEventListener("input", function () {
                            // Get the current value of the input field
                            var inputValue = this.value;

                            // Convert the input value to a number
                            var hours = parseFloat(inputValue);

                            // Check if the value is greater than 12
                            if (hours > 24) {
                                // If greater than 12, set the value to 12
                                this.value = 24;
                            }
                        });
                    </script>
                    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script>
                        $(document).ready(function () {
                            $("#Categorylist").change(function () {
                                var Part = $(this).val();
                                $.ajax({
                                    url: '/Direct_Activities/Getinfo',
                                    method: 'GET',
                                    data: { Part: Part },
                                    success: function (data) {
                                        if (data) {
                                            $('#Properties').slideDown(300);
                                            $("#Description").text("" + data.Description);

                                        } else {
                                            // Handle the case where data is empty
                                        }
                                    },
                                    error: function () {
                                        console.log('Error retrieving record data.');
                                    }
                                });
                            });



                        });
                    </script>
                    <ul style="display:none" id="Properties">
                        <li><i class="fa fa-spin fa-circle-notch text-primary"></i>  <span id="Description"></span></li>

                    </ul>
                    <div class="dropdown-divider"></div>
                    <label><i class="fa fa-comment-dots text-primary"></i> @Html.LabelFor(model => model.Comments) </label>
                    <div class="form-row">

                        @Html.TextAreaFor(model => model.Comments, 4, 70, htmlAttributes: new
                   {
                       id = "Comments", // Make sure the ID matches the one in getElementById
                       style = "width: 70%; max-width:70%;",
                       @placeholder = "Additional information",
                       @autofocus = "",
                       @Required = true,
                       @class = "form-control form-rounded2",
                       @data_required_if = "#Project_Name"  // Custom attribute for conditional validation
                   })
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })

                        <script>
                            document.getElementById("Comments").addEventListener("paste", function (event) {
                                // Prevent the default paste behavior
                                event.preventDefault();

                                // Get the pasted content as plain text
                                var text = (event.clipboardData || window.clipboardData).getData("text/plain");

                                // Sanitize the pasted content (you may use a library for this)
                                var sanitizedText = sanitizeFunction(text);

                                // Insert the sanitized plain text into the textarea as HTML
                                document.execCommand("insertHTML", false, sanitizedText);
                            });

                            function sanitizeFunction(input) {
                                // Implement your own sanitization logic or use a library
                                // to ensure that the pasted content is safe.
                                // Example: Implement a function to escape HTML entities.
                                return input.replace(/</g, "&lt;").replace(/>/g, "&gt;");
                            }
                        </script>

                    </div>

                    <div class="dropdown-divider"></div>
                    <input type="submit" name="action" value="Add Activity" class="btn btn btn-success" style="color:white" onclick="return confirm('Are you sure you save this Timesheet?')" />


                    <script>
                        $(function () {
                            $('#Create').click(function () {
                                if (confirm('Are you sure?')) {
                                    window.location.href = $(this).data('url');
                                }
                            });
                        });
                    </script>

                    <a href="@Request.UrlReferrer" class="btn btn-primary">Back</a>
                    <div class="dropdown-divider"></div>


                </div>






            </form>



        }


    </div>
