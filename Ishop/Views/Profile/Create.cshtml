@model IShop.Core.Profile

@{
    ViewBag.Title = "Profile setup";
}



<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }

    form-rounded2 {
        border-radius: 4rem;
        border-color: orangered;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>


<!-- Main content -->

<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }



    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    hr {
        border: none;
        color: black;
        background-color: greenyellow;
        height: 1px;
        width: 100%;
    }
</style>



@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->






<br />
<div class="col d-flex justify-content-center">
    <div class="col-md-11 col-sm-12 col-12">
        <div class="card mb- mb-xl-0" style="border-radius: 24px;">
            <div class="card-header" style="background-color: darkcyan; color: white; border-radius: 14px ">
                <i class="fa fa-user-circle"></i> Profile Setup
            </div>
            <div class="card-body" style="background-color: white;border-radius: 24px;">
                <div class="card-body" style="background-color: #ffffffc1;border-radius: 24px;">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <form>



                        <div class="form-row">
                            <div class="col-7 col-md-3">
                                <label><i class="fa fa-calendar text-cyan"></i>     @Html.LabelFor(model => model.lastupdate)</label>
                                @Html.EditorFor(model => model.lastupdate, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control ",
                                   @PlaceHolder = "Apartment Name",
                                   @Value = DateTime.Now,
                                        @Readonly = true

                               }
                           })
                            </div>
                            <div class="col-9 col-md-4">
                                <label><i class="fa fa-user-check text-cyan"></i>     @Html.LabelFor(model => model.Fullnames)</label>
                                @Html.EditorFor(model => model.Fullnames, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   @PlaceHolder = "fullnames",
                                   @Required = true,
                                    }
                                })
                            </div>
                            <div class="col-8 col-md-3">
                                <label><i class="fa fa-mobile text-cyan"></i>     @Html.LabelFor(model => model.Phone)</label>
                                @Html.EditorFor(model => model.Phone, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   @PlaceHolder = "phone number",
                                   @Required = true,
                                    }
                                })
                            </div>
                            <hr />
                            <div class="row">
                                <div class="form-group col-md-4">
                                    <label><i class="fa fa-envelope text-cyan"></i>     @Html.LabelFor(model => model.email)</label>
                                    @Html.EditorFor(model => model.email, new
                               {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control",
                                       @PlaceHolder = "Email Address",
                                       @Required = true,
                                        }
                                    })
                                    <span id="emailValidationResult"></span>
                                </div>

                                <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                                <script>
    $(document).ready(function () {
        $("#email").on("input", function () {
            var email = $(this).val();

            $.ajax({
                url: '@Url.Action("ValidateEmail", "Profile")',
                type: 'POST',
                data: { email: email },
                success: function (result) {
                    if (result.isValid) {
                        $("#emailValidationResult").text("Valid email address.").css("color", "green");
                    } else {
                        $("#emailValidationResult").text("Invalid email address.").css("color", "red");
                    }
                }
            });
        });
    });
                                </script>

                                <div class="form-group col-md-4">
                                    <label><i class="fa fa-dna text-cyan"></i>     @Html.LabelFor(model => model.Gender)</label>
                                    @{
                                        List<SelectListItem> q = new List<SelectListItem>();
                                        q.Add(new SelectListItem
                                        {
                                            Text = "👨 Male",
                                            Value = "Male",
                                        });
                                        q.Add(new SelectListItem
                                        {
                                            Text = "👩 Female",
                                            Value = "Female",
                                        });



                                    }@Html.DropDownListFor(model => model.Gender, q, "--Gender--", new { @class = "form-control form-control", @required = "required", })
                                </div>

                                <div class="form-group col-md-4">
                                    <label> <i class="fa fa-layer-group text-cyan"></i> @Html.LabelFor(model => model.sector)</label>
                                    @Html.DropDownList("sector", ViewBag.sectors as SelectList, "-- Select sector --",
                                   new { @class = "form-control ", @required = "required", data_live_search = "true" })
                                </div>



                                <script type="text/javascript">
                                    $(function () {
                                        $("#sector").chosen();
                                        
                                    });
                                </script>

                                <div class="form-group col-md-4">
                                    <label><i class="fa fa-map-marker text-cyan"></i>            @Html.LabelFor(model => model.Residency)</label>
                                    @Html.EditorFor(model => model.Residency, new
                               {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control",
                                       @PlaceHolder = "Residency",
                                       @Required = true,

                                   }
                               })
                                </div>

                                <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyA-YqZINvC4zTP1wVxbTeEgmIsb5z0cQrQ"></script>
                                <script type="text/javascript">
                                    google.maps.event.addDomListener(window, 'load', function () {
                                        var places = new google.maps.places.Autocomplete(document.getElementById('Residency'));
                                        google.maps.event.addListener(places, 'place_changed', function () {
                                            var place = places.getPlace();
                                            document.getElementById('Latitude').value = place.geometry.location.lat();
                                            document.getElementById('Longitude').value = place.geometry.location.lng();
                                        });
                                    });
                                </script>


                            </div>
                        </div>


                            <hr />
                            <input type="submit" value="Create profile" class="btn btn-success" />
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                            <br />





</form>
                   










                }
            </div>

        </div>
    </div>
</div>
    </div>
</section>
