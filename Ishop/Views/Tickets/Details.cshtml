@model IShop.Core.Ticket

@{
    ViewBag.Title = "Ticket Details";
}

    <div class="modal-header "style="text-align:center">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h7 class="modal-title"><i class="fa fa-id-card text-warning"></i> Ticket Details</h7>
    </div>
    <div class="modal-body" style="width: 100%;">
        <div class="card-body">
            <div class="form-row">
                <div class="form-group col-md-3">
                    <label><i class="fa fa-calendar text-warning"></i> @Html.LabelFor(model => model.CreatedOn) </label>
                    @Html.EditorFor(model => model.CreatedOn, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",

                       @Readonly = true

                   }
               })

                </div>
                <div class="form-group col-md-2">
                    <label><i class="fa fa-user-circle text-primary"></i> @Html.LabelFor(model => model.Staff) </label>
                    @Html.EditorFor(model => model.Staff, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",

                       @Readonly = true

                   }
               })

                </div>
                
                <div class="form-group col-md-2">
                    <label><i class="fa fa-plane text-warning"></i> @Html.LabelFor(model => model.Airline) </label>
                    @Html.EditorFor(model => model.Airline, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-user text-warning"></i> @Html.LabelFor(model => model.Pax_Name) </label>
                    @Html.EditorFor(model => model.Pax_Name, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>

            </div>
            <hr />
            <div class="form-row">

                <div class="form-group col-md-3">
                    <label><i class="fa fa-cash-register text-warning"></i> @Html.LabelFor(model => model.Inv_Amount) </label>
                    @Html.EditorFor(model => model.Inv_Amount, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-cash-register text-warning"></i> @Html.LabelFor(model => model.Net_Amount) </label>
                    @Html.EditorFor(model => model.Net_Amount, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>





                <div class="form-group col-md-3">
                    <label><i class="fa fa-cash-register text-warning"></i> @Html.LabelFor(model => model.Incentv) </label>
                    @Html.EditorFor(model => model.Incentv, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
                <div class="form-group col-md-2">
                    <label><i class="fa fa-circle-notch text-warning"></i> @Html.LabelFor(model => model.Recovery)</label>
                    @Html.EditorFor(model => model.Recovery, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>
            </div>
            <div class="row">




                <div class="form-group col-md-3">
                    <label><i class="fa fa-calendar-day text-warning"></i> @Html.LabelFor(model => model.Departure_Date)</label>
                    @Html.EditorFor(model => model.Departure_Date, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-calendar-day text-warning"></i> @Html.LabelFor(model => model.Arrival_Date)</label>
                    @Html.EditorFor(model => model.Arrival_Date, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-road text-warning"></i> @Html.LabelFor(model => model.Routing)</label>
                    @Html.EditorFor(model => model.Routing, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>

                <div class="form-group col-md-2">
                    <label><i class="fa fa-circle-notch text-warning"></i> @Html.LabelFor(model => model.CTC)</label>
                    @Html.EditorFor(model => model.CTC, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-handshake text-warning"></i> @Html.LabelFor(model => model.Service_Provider)</label>
                    @Html.EditorFor(model => model.Service_Provider, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>
                <div class="form-group col-md-4">
                    <label><i class="fa fa-users-cog text-warning"></i> @Html.LabelFor(model => model.Client)</label>
                    @Html.EditorFor(model => model.Client, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-id-card text-warning"></i> @Html.LabelFor(model => model.Mode)</label>
                    @Html.EditorFor(model => model.Mode, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-user-check text-warning"></i> @Html.LabelFor(model => model.Payer)</label>
                    @Html.EditorFor(model => model.Payer, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-globe text-warning"></i> @Html.LabelFor(model => model.Ticketing_System)</label>
                    @Html.EditorFor(model => model.Ticketing_System, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>

                @if (Model.Group_ticket == true) { <div class="form-group col-md-3">
    <label><i class="fa fa-layer-group text-warning"></i> @Html.LabelFor(model => model.Group_id)</label>
    @Html.EditorFor(model => model.Group_id, new
{
   htmlAttributes = new
   {
       @class = "form-control form-control-sm",
       @Placeholder = "CTC",
       @Readonly = true,


   }
})
    <button type="button" id="myCopyButton" class="btn btn-sm btn-warning"><i class="fa fa-copy"></i></button>

    <script>
        function copyToClipboard() {
            var copyText = document.getElementById("Group_id");
            copyText.select();
            document.execCommand("copy");
            alert("Copied Group Ticket Id: " + copyText.value);
        }
        $(document).ready(function () {
            $('#myCopyButton').click(function () {
                copyToClipboard();
            });
        });
    </script>
</div>
                }

            </div>
            <label><i class="fa fa-comment text-warning"></i> @Html.LabelFor(model => model.Remarks)</label>
            <div class="row">


                @Html.TextAreaFor(model => model.Remarks, 3, 70, htmlAttributes: new
           {
               style = "width: 100%; max-width:100%;",
               @placeholder = "Provide your response based on the test records",
               @autofocus = ""
               ,
               @class = "form-control form-rounded",
               @ReadOnly = true

           })




            </div>
        </div>
       
        <div class="table-responsive"style="border-radius: 10px; ">
            <table class="table table-bordered table-hover  text-nowrap" style="border-radius: 10px; ">

                <thead style="border-radius: 10px; ">
                    <tr style="color:black">
                        <th style="background-color: whitesmoke; "> <small>Date</small></th>

                        <th style="background-color: whitesmoke; "><small>User</small> </th>


                        <th style="background-color: whitesmoke; "><small>Action</small> </th>


                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.F)
                    {
                        <tr data-widget="expandable-table" aria-expanded="false">

                            <td style="background-color:white"><small> @item.CreatedOn</small></td>
                            <td style="background-color:white"> <small><i class="fa fa-user-check"></i> @item.User_Acc</small></td>
                            <td style="background-color:white"> <small><i class="fa fa-spinner"></i> @item.Action</small></td>
                            
                        </tr>
                    }
                </tbody>
            </table>

            <hr />
            @if ((Model.Ticket_status == 0) && this.User.IsInRole("Tickets_Approval"))
            {<button type="button" class="btn btn-warning active"
                     onclick="location.href='@Url.Action("Approve_Ticket", "Tickets" ,new { id = Model.id })'">
                    Approve_Ticket
                </button>}
            @if ((Model.Ticket_status == 1) && this.User.IsInRole("Tickets_Invoicing"))
            {<button type="button" class="btn btn-warning active"
                     onclick="location.href='@Url.Action("Ticket_Invoicing", "Tickets" ,new { id = Model.id })'">
                    Invoice Ticket
                </button>}
            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
        </div>



    </div>