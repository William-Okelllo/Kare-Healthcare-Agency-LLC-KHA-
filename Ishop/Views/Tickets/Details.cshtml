@model IShop.Core.Ticket

@{
    ViewBag.Title = "Ticket Details";
}
<div>
    <div class="modal-header "style="text-align:center">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h7 class="modal-title"><i class="fa fa-id-card text-warning"></i> Ticket Details</h7>
    </div>
    <div class="modal-body" style="width: 750px;">
        <div class="card-body">
            <div class="form-row">
                <div class="form-group col-md-3">
                    <label><i class="fa fa-calendar text-warning"></i> @Html.LabelFor(model => model.CreatedOn) </label>
                    @Html.EditorFor(model => model.CreatedOn, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",

                       @Readonly = true

                   }
               })

                </div>
                <div class="form-group col-md-2">
                    <label><i class="fa fa-user-circle text-primary"></i> @Html.LabelFor(model => model.Staff) </label>
                    @Html.EditorFor(model => model.Staff, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",

                       @Readonly = true

                   }
               })

                </div>
                <div class="form-group col-md-2">
                    <label><i class="fa fa-circle-notch text-warning"></i> @Html.LabelFor(model => model.CONS) </label>
                    @Html.EditorFor(model => model.CONS, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
                <div class="form-group col-md-2">
                    <label><i class="fa fa-plane text-warning"></i> @Html.LabelFor(model => model.Airline) </label>
                    @Html.EditorFor(model => model.Airline, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-user text-warning"></i> @Html.LabelFor(model => model.Pax_Name) </label>
                    @Html.EditorFor(model => model.Pax_Name, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>

            </div>
            <hr />
            <div class="form-row">

                <div class="form-group col-md-3">
                    <label><i class="fa fa-cash-register text-warning"></i> @Html.LabelFor(model => model.Inv_Amount) </label>
                    @Html.EditorFor(model => model.Inv_Amount, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-cash-register text-warning"></i> @Html.LabelFor(model => model.Net_Amount) </label>
                    @Html.EditorFor(model => model.Net_Amount, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-cash-register text-warning"></i> @Html.LabelFor(model => model.Gross_Profit) </label>
                    @Html.EditorFor(model => model.Gross_Profit, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>




                <div class="form-group col-md-3">
                    <label><i class="fa fa-cash-register text-warning"></i> @Html.LabelFor(model => model.Incentv) </label>
                    @Html.EditorFor(model => model.Incentv, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "Pax Name",
                       @Readonly = true,
                   }
               })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-2">
                    <label><i class="fa fa-circle-notch text-warning"></i> @Html.LabelFor(model => model.Recovery)</label>
                    @Html.EditorFor(model => model.Recovery, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>



                <div class="form-group col-md-3">
                    <label><i class="fa fa-calendar-day text-warning"></i> @Html.LabelFor(model => model.Departure_Date)</label>
                    @Html.EditorFor(model => model.Departure_Date, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-calendar-day text-warning"></i> @Html.LabelFor(model => model.Arrival_Date)</label>
                    @Html.EditorFor(model => model.Arrival_Date, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-road text-warning"></i> @Html.LabelFor(model => model.Routing)</label>
                    @Html.EditorFor(model => model.Routing, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-calendar-day text-warning"></i> @Html.LabelFor(model => model.USD_ACC)</label>
                    @Html.EditorFor(model => model.USD_ACC, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "0.0",
                       @Readonly = true,

                   }
               })
                </div>

                <div class="form-group col-md-2">
                    <label><i class="fa fa-circle-notch text-warning"></i> @Html.LabelFor(model => model.CTC)</label>
                    @Html.EditorFor(model => model.CTC, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fa fa-handshake text-warning"></i> @Html.LabelFor(model => model.Service_Provider)</label>
                    @Html.EditorFor(model => model.Service_Provider, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>
                <div class="form-group col-md-4">
                    <label><i class="fa fa-handshake text-warning"></i> @Html.LabelFor(model => model.Client)</label>
                    @Html.EditorFor(model => model.Client, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control form-control-sm",
                       @Placeholder = "CTC",
                       @Readonly = true,


                   }
               })
                </div>

            </div>
            <label><i class="fa fa-comment text-warning"></i> @Html.LabelFor(model => model.Remarks)</label>
            <div class="row">


                @Html.TextAreaFor(model => model.Remarks, 3, 70, htmlAttributes: new
           {
               style = "width: 100%; max-width:100%;",
               @placeholder = "Provide your response based on the test records",
               @autofocus = ""
               ,
               @class = "form-control form-rounded",
               @ReadOnly = true

           })




            </div>
        </div>

        <hr />
        @if ((Model.Ticket_status == 0) && this.User.IsInRole("Tickets_Approval"))
        {<button type="button" class="btn btn-warning active"
                 onclick="location.href='@Url.Action("Approve_Ticket", "Tickets" ,new { id = Model.id })'">
                Approve_Ticket
            </button>}
        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
    </div>
    
       
    
</div>