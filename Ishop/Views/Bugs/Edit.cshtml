@model IShop.Core.Bug



@{
    ViewBag.Title = "Bug reply";
}
<style>
    image {
        height: 100px;
        width: 100px;
    }

    body {
        background-image: url(../../Images/shop.jpg);
        background-size: cover;
    }
</style>

<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }
</style>

<div class="loading" align="center">

    <img src="~/Images/t.gif" height="200" />

</div>
<script type="text/javascript">
    var modal, loading;
    function ShowProgress() {
        modal = document.createElement("DIV");
        modal.className = "modal";
        document.body.appendChild(modal);
        loading = document.getElementsByClassName("loading")[0];
        loading.style.display = "block";
        var top = Math.max(window.innerHeight / 2 - loading.offsetHeight / 2, 0);
        var left = Math.max(window.innerWidth / 2 - loading.offsetWidth / 2, 0);
        loading.style.top = top + "px";
        loading.style.left = left + "px";
    };
    ShowProgress();
</script>
<!-- Keep the Page Content Here.-->
<script type="text/javascript">
    window.onload = function () {
        setTimeout(function () {
            document.body.removeChild(modal);
            loading.style.display = "none";
        }, 800); //Delay just used for example and must be set to 0.
    };
</script>


<div class="card " style="background-color: rgba(0, 0, 0, 0.64);">



    <div class="row">
        <div class="col-12">

            <div class="card-header" style="background-color:seagreen">
                <h3 class="card-title" style="color:white">
                    </i>  <i class="fa fa-handshake text-white"></i>
                    Post Reply
                </h3>
            </div>
            <!-- /.card-header -->


            @if (ViewBag.Message != null)
            {
                <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
                </script>
            }


            @if (TempData["Msg"] != null)
            {<div class="row">
                    <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        @TempData["Msg"]
                    </div>
                </div>
            }

            <script>
                window.setTimeout(function () {
                    $(".alert").fadeTo(500, 0).slideUp(500, function () {
                        $(this).remove();
                    });
                }, 2000);
            </script>

            @using (Html.BeginForm(""))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="card" style="background-color: rgb(0, 0, 0, 0.48);">
                    <div class="card-body">

                        <form>

                            <div class="form-row">

                                <div class="col-md-2 mb-3">
                                    <p style="font-family:Quicksand;color:white">@Html.LabelFor(model => model.Post_Date)</p>
                                    @Html.EditorFor(model => model.Post_Date, new
                               {
                                   htmlAttributes = new
                                   { @class = "form-control form-rounded", @ReadOnly = true }
                               })
                                </div>
                                <div class="col-md-2 mb-3">
                                    <p style="font-family:Quicksand;color:white">@Html.LabelFor(model => model.Posted_By)</p>
                                    @Html.EditorFor(model => model.Posted_By, new
                               {
                                   htmlAttributes = new
                                   { @class = "form-control form-rounded", @ReadOnly = true }
                               })
                                </div>




                                <div class="col-md-2 mb-2">
                                    <p style="font-family:Quicksand;color:white">@Html.LabelFor(model => model.severity)</p>
                                    @Html.EditorFor(model => model.severity, new
                               {
                                   htmlAttributes = new
                                   { @class = "form-control form-rounded", @ReadOnly = true }
                               })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-3 mb-3">
                                    <label style=" color: white">@Html.LabelFor(model => model.Status)</label>
                                    @{
                                        List<SelectListItem> w = new List<SelectListItem>();


                                        w.Add(new SelectListItem
                                        {
                                            Text = "Solved",
                                            Value = "Solved",
                                        });
                                        w.Add(new SelectListItem
                                        {
                                            Text = "Inprogress",
                                            Value = "Inprogress",
                                        });

                                    }@Html.DropDownListFor(model => model.Status, w, "Status", new { @class = "form-control form-rounded" })


                                </div>
                            </div>
                            <div class="form-row">


                                @Html.TextAreaFor(model => model.Message, 4, 70, htmlAttributes: new
                           {
                               style = "width: 50%; max-width:50%;",
                               @placeholder = "your reminder message",
                               @autofocus = ""
                               ,
                               @class = "form-control form-rounded",
                               @ReadOnly = true
                           })
                                <div class="form-row">


                                    @Html.TextAreaFor(model => model.Support_Message, 4, 70, htmlAttributes: new
                               {
                                   style = "width: 50%; max-width:50%;",
                                   @placeholder = "your reminder message",
                                   @autofocus = ""
                                   ,
                                   @class = "form-control form-rounded"

                               })
                                </div>
                            </div>


                            <table class="table">

                                <tbody>
                                <td style="text-align:left">

                                    <input type="submit" value="Reply" class="btn btn btn-primary" style="color:white" />


                                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn  btn-outline-primary btn" })

                                </td></tbody>
                            </table>


                        </form>
                    </div>

                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
                </div>
            </div>
    </div>
</div>