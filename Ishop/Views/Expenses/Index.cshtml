@using PagedList
@using PagedList.Mvc;
@model IPagedList<IShop.Core.Expense>

@{
    ViewBag.Title = "Expenses";
}


<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }
</style>

<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }
    .form-rounded2 {
        border-radius: 0.5rem;
        width: 100%;
        border-color: gray;
    }
    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }
    .curved-table {
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
    }

        .curved-table th,
        .curved-table td {
            padding: 10px;
            border: 1px solid #d3d3d3;
        }

    table {
        border-collapse: collapse;
        overflow: visible;
    }

    .form-rounded {
        border-radius: 0.5rem;
        width: 50%;
        border-color: white;
    }
</style>

<div class="card " style="background-color: #fffffff9">

    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
            <h3 style="color:#53085B;">
                <i class="fa fa-funnel-dollar"></i>
                Expense Monitor
            </h3>
            <div>
               
                @Html.ActionLink(" Add Expense", "Add", "Expenses", null, new { @class = "btn btn-sm btn-warning" })
            </div>
        </div>
    </div>


    @if (TempData["Msg"] != null)
    {<div class="row">
            <div class="alert alert-warning col-md-6 col-md-offset-4" align="center">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                @TempData["Msg"]
            </div>
        </div>
    }

    <script>
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 2000);
    </script>


    <div class="row justify-content-center">

        <div class="col-sm-3 col-6 border-right" style="border-radius: 15px; background-color: white; border-left: 6px solid #53085B">
            <div class="description-block">
                <h3 class="description-header"><span class="badge badge-warning"><i class="fa fa-calendard-day"></i></span> $ @ViewBag.Budget.ToString("#,##0.00") </h3>
                <div class="dropdown-divider"></div>
                <span><b>Budget Amount</b></span>
            </div>
            <!-- /.description-block -->
        </div>

        <div class="col-sm-3 col-6  border-right" style="border-radius: 15px; background-color: white; border-left: 6px solid #acb907">
            <div class="description-block">
                <h2 class="description-header"><span class="badge badge-success"><i class="fa fa-calendard-day"></i></span>$ @ViewBag.Balance.ToString("#,##0.00") </h2>
                <div class="dropdown-divider"></div>
                <span><b>Balance Amount</b></span>
            </div>
            <!-- /.description-block -->
        </div>
        <div class="col-sm-3 col-6  border-right" style="border-radius: 15px; background-color: white; border-left: 6px solid #ff0000">
            <div class="description-block">
                <h3 class="description-header"><span class="badge badge-danger"><i class="fa fa-calendard-day"></i></span>$ @ViewBag.Expenses.ToString("#,##0.00") </h3>
                <div class="dropdown-divider"></div>
                <span><b>Total Expenses</b></span>
            </div>
            <!-- /.description-block -->
        </div>
        <!-- /.col -->

    </div>




    <div class="table-responsive">
        <table class="table table-bordered table-hover   table-condensed table-striped table-hover sortable curved-table text-nowrap">


            <thead>
                <tr style="color:white">

                    <th style="background-color: #53085B; font-size: medium; ">Added On </th>
                    <th style="background-color: #53085B; font-size: medium; ">Title</th>
                    <th style="background-color: #53085B; font-size: medium; ">Amount</th>

                    <th style="background-color: #53085B; font-size: medium; ">Description</th>
                    <th style="background-color: #53085B; font-size: medium;">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="background-color:white;">
                            <span class="badge badge-danger"><medium>   <i class="fa fa-tag"></i> Tag  </medium></span> <b>@item.Id</b>
                            <div class="dropdown-divider"></div>
                            <span class="badge badge-secondary"><medium>   <i class="fa fa-calendar-check"></i> AddedOn  </medium></span> <b>@item.AddedOn.ToString("dd-MMMM-yyyy")</b>
                        </td>
                        <td style="background-color:white;font-size:medium">
                            <span class="badge badge-warning"><medium>   <i class="fa fa-file-invoice"></i>   </medium></span> @item.Title
                        </td>


                        <td style="background-color:whitesmoke;">
                            <h4><span class="badge badge-warning"><medium>   <i class="fa fa-file-invoice"></i>   </medium></span> @item.Track</h4>
                            <div class="dropdown-divider"></div>
                            <span class="badge badge-danger"><medium>   <i class="fa fa-file-invoice "></i></medium> Amount  </span> <b>  </b>   <b>$ @item.Amount.ToString("#,##0.00")</b> <small><b>/=</b></small>
                        </td>
                        <td style="background-color:white;font-size:medium;color:gray">
                            @{
                                string message2 = item.Description.Replace("\n", "<br>");
                                string pattern2 = @"(https?://[^\s]+)";
                                string replacedMessage2 = System.Text.RegularExpressions.Regex.Replace(message2, pattern2, "<a href=\"$1\" target=\"_blank\">$1</a>");
                            }

                            <p>@Html.Raw(replacedMessage2)</p>
                        </td>
                        <td style="background-color:ghostwhite">

                            <div class="btn-group dropdown">
                                <button type="button" class="btn btn-sm btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fa fa-hashtag"></i>  . Action
                                </button>
                                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">

                                    <div class="dropdown-divider"></div>
                                    <a href="@Url.Action("Edit", "Expenses", new { id = item.Id })" class="dropdown-item">
                                        <i class="fa fa-pen-nib text-primary"></i> Update/Edit Expense
                                    </a>

                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" onclick="if (confirm('Are you sure you want to delete this Expense ')) { window.location.href = '@Url.Action("Delete", "Expenses", new { id = item.Id, })'; }">
                                        <i class="fa fa-times-circle text-danger"></i> Drop Expense
                                    </a>
                                    <script>
                                        $(function () {
                                            $('#Deny').click(function () {
                                                if (confirm('Are you sure?')) {
                                                    window.location.href = $(this).data('url');
                                                }
                                            });
                                        });
                                    </script>
                                </div>
                            </div>
                        </td>
                    </tr>

                }
            </tbody>
        </table>




        <style>
            .ul.pagination {
                display: inline-block;
                padding: 1;
                margin: 1;
                border-radius: 0.5rem;
            }

            ul.pagination li {
                display: inline;
            }

                ul.pagination li a {
                    color: black;
                    float: left;
                    padding: 8px 16px;
                    text-decoration: none;
                    transition: background-color;
                    background-color: #ddd;
                    border-color: white;
                    border-radius: 0.5rem;
                }

                    ul.pagination li a.active {
                        background-color: dodgerblue;
                        color: white;
                    }

                    ul.pagination li a:hover:not(.active) {
                        background-color: dodgerblue;
                        border-radius: 0.5rem;
                    }
        </style>
        <div id="container" style="text-align:left">

            <div class="pagination" style="text-align:left">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["SearchBy"], search = Request.QueryString["Search"] })
              , new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayLinkToIndividualPages = true })
            </div>
        </div>
    </div>


</div>

</div>





