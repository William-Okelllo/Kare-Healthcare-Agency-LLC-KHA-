@model Ishop.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
@{Layout = null;}






@{
    ViewBag.Title = "Register";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/FrontEnd/plugins/fontawesome-free/css/all.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="~/FrontEnd/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="~/FrontEnd/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- JQVMap -->
    <link rel="stylesheet" href="~/FrontEnd/plugins/jqvmap/jqvmap.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/FrontEnd/dist/css/adminlte.min.css">
    <!-- overlayScrollbars -->
    <link rel="stylesheet" href="~/FrontEnd/plugins/overlayScrollbars/css/OverlayScrollbars.min.css">
    <!-- Daterange picker -->
    <link rel="stylesheet" href="~/FrontEnd/plugins/daterangepicker/daterangepicker.css">
    <!-- summernote -->
    <link rel="stylesheet" href="~/FrontEnd/plugins/summernote/summernote-bs4.min.css">
</head>
<body class="hold-transition login-page" style="background-image: url('../../Images/login.png');
        background-repeat: no-repeat;
        background-size: cover;">
    <br />


    <style type="text/css">
        .loading {
            font-size: 10pt;
            width: 200px;
            height: 100px;
            display: none;
            position: fixed;
            z-index: 999;
        }

        .form-rounded {
            border-radius: 1rem;
        }
    </style>


    @{
        ViewBag.Title = "New Client";
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <hr />
       

        <div class="card card-outline card-success" style="background-color: rgba(0,0,0,.5);">
            <div class="card-header">
                <a style="text-align:center"><img src="~/Images/Andest2.png" height="80" /></a>




                @if (TempData["Msg"] != null)
                {
                    <div class="alert alert-success" style="color:white;text-align:center;font-style:italic">

                        @TempData["Msg"]

                    </div>
                    <hr />

                    <script>
                        window.setTimeout(function () {
                            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                                $(this).remove();
                            });
                        }, 2000);
                    </script>
                }



                <form>



                    <div class="form-row">

                        <div class="form-group col-md-6">
                            <label style="color:white">@Html.LabelFor(model => model.UserName)</label>
                            @Html.EditorFor(model => model.UserName, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control ",
                              @PlaceHolder = "Username"
                           }
                       })  @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label style="color:white">@Html.LabelFor(model => model.Email)</label>
                    @Html.EditorFor(model => model.Email, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control ",
                      @PlaceHolder = "Email Address"
                   }
               })  @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            </div>



            <div class="form-row">



                <div class="form-group col-md-6">


                    <small style="color:white"><i class="fa fa-shield"></i> Kindly select account Type</small>
                    @Html.DropDownList("UserRoles", (SelectList)ViewBag.Name, "--Account Type-- ", new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.UserRoles, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-row">
                <div class="form-group col-md-6">
                    <label style="color:white">@Html.LabelFor(model => model.Password)</label>
                    @Html.EditorFor(model => model.Password, new
              {
                  htmlAttributes = new
                  {
                      @class = "form-control form-rounded",
                      @PlaceHolder = "Password",

                  }
              })  @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                <label style="color:white">@Html.LabelFor(model => model.ConfirmPassword)</label>
                @Html.EditorFor(model => model.ConfirmPassword, new
            {
               htmlAttributes = new
               {
                   @class = "form-control form-rounded",
                   @PlaceHolder = "Confirm Password",

               }
            })  @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>




            </div>


            <table>
                <thead>
                    <tr>
                        <p style="color:white">Actions</p>
                    </tr>
                </thead>
                <tbody>
                <td>
                    <input type="submit" value="Register Account" class="btn btn-success" />   ||
                    <input type="Reset" value="Reset" class="btn btn-danger" />   ||




                    <br />


                    <i style="font-family:Calibri">   @Html.ValidationSummary(false, "", new { @class = "text-danger" })</i>
                </td>
                </tbody>
            </table>
            

            </form>

            <medium style="color:white">
                <i class="fa fa-bell"></i> After login check your email to cofirm account
            </medium>

            <div style="text-align:right;color:yellow">


                @Html.ActionLink("Already Registered", "Login", "Account", null, new { @class = "btn btn-outline-primary btn-sm" })
            </div>

            </div>
</div>

}

</body>
</html>

@section Scripts
                            {
    @Scripts.Render("~/bundles/jqueryval")
}

