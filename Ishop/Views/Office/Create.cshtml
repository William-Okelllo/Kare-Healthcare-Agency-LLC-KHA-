@model Ishop.Models.Office

@{
    ViewBag.Title = "Cordinates";
}

<br>


<div class="col d-flex justify-content-center">
    <div class="col-md-9" style="border-radius: 24px;">
        <!-- Widget: user widget style 2 -->
        <div class="card card-widget widget-user-2">
            <!-- Add the bg color to the header using any of the bg-* classes -->
            <div class="widget-user-header" style="background-color: #001F3F ">

                <!-- /.widget-user-image -->

                <h5 style="color:white"><i class="fa fa-map-marker"></i>  Setup Cordinates   </h5>


            </div>
            <div class="card-body" style="background-color: white">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                      
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-row">

                        <div class="form-group col-md-5">
                            <label style="font-family:Quicksand;">
                               <i class="fa fa-map-marker text-danger"></i> @Html.LabelFor(model => model.Office_location)
                            </label>
                            @Html.EditorFor(model => model.Office_location, new
                 {
                     htmlAttributes = new
                     {
                         @class = "form-control ",
                         @placeholder = "Office Address",

                              }
                 })


                        </div>
                        <div class="form-group col-md-4">
                            <label style="font-family:Quicksand;">
                                <i class="fa fa-circle-notch text-success"></i>  @Html.LabelFor(model => model.Radius)
                            </label>
                            @Html.EditorFor(model => model.Radius, new
                 {
                     htmlAttributes = new
                     {
                         @class = "form-control ",
                         @placeholder = "Office max radius",

                              }
                 })


                        </div>
                    </div>
                    <div>
                        <i class="fa fa-circle-notch text-success"></i> The radius mean the max distance in meters that once can be from the indicated office location
                    </div>

                        <hr />
                        <div class="form-row">
                            <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyA-YqZINvC4zTP1wVxbTeEgmIsb5z0cQrQ"></script>
                            <script type="text/javascript">
                                google.maps.event.addDomListener(window, 'load', function () {
                                    var places = new google.maps.places.Autocomplete(document.getElementById('Office_location'));
                                    google.maps.event.addListener(places, 'place_changed', function () {
                                        var place = places.getPlace();
                                        document.getElementById('latitude').value = place.geometry.location.lat();
                                        document.getElementById('longitude').value = place.geometry.location.lng();
                                    });
                                });
                            </script>

                            <div class="col-md-3 mb-2">
                                <label style="font-family:Quicksand;">
                                    <i class="fa fa-location-arrow"></i> @Html.LabelFor(model => model.latitude)
                                </label>
                                @Html.EditorFor(model => model.latitude, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control",
                                   @Readonly = true
                               }
                           })
                            </div>
                            <div class="col-md-3 mb-2">
                                <label style="font-family:Quicksand;">
                                    <i class="fa fa-location-arrow"></i>  @Html.LabelFor(model => model.longitude)
                                </label>
                                @Html.EditorFor(model => model.longitude, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control",
                                   @Readonly = true
                               }
                           })
                            </div>
                        </div>

                        
                        <hr />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save & Submit " class="btn btn-success" />
                                || @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                            </div>
                        </div>
                    </div>
                }

               
