@model IShop.Core.Expense

@{
    ViewBag.Title = "New Expense";
}


<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>


<!-- Main content -->

<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }



    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    hr {
        border: none;
        color: black;
        background-color: greenyellow;
        height: 1px;
        width: 100%;
    }
</style>



@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->





<br>


<div class="card" style="border-radius: 24px;">
    <div class="card-header" style="background-color: #001F3F;color:white">
        <i class="fa fa-id-card text-white nav-icon"></i> New Expense
    </div>
        <div class="card-body" style="background-color: white;border-radius: 24px;">
            <div class="card-body" style="background-color: #ffffffc1;border-radius: 24px;">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })






                <div class="form-row">
                    <div class="form-group col-md-3" style="display:none">
                        <label style="font-family:Quicksand;">@Html.LabelFor(model => model.CreatedOn)</label>
                        @Html.EditorFor(model => model.CreatedOn, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control ",

                           @Value = DateTime.Now,
                           @Readonly = true




                       }
                   })


                    </div>
                    <div class="form-group col-md-3" style="display:none">
                        <label style="font-family:Quicksand;">@Html.LabelFor(model => model.staff)</label>
                        @Html.EditorFor(model => model.staff, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control ",

                           @Value =User.Identity.Name,
                           @Readonly = true




                       }
                   })


                    </div>
                    <div class="form-group col-md-5">
                        <label><i class="fa fa-cubes text-orange"></i> @Html.LabelFor(model => model.Item)</label>

                        @Html.DropDownList("Item", ViewBag.Categories as SelectList, "-- Select item --",
                       new { @class = "form-control form-control", @required = "required" })
                    </div>
                    <div class="form-group col-md-3">
                        <label> <i class="fa fa-globe text-orange"></i> @Html.LabelFor(model => model.Mode)</label>
                        @{
                            List<SelectListItem> q = new List<SelectListItem>();
                            q.Add(new SelectListItem
                            {
                                Text = "Cash Payment",
                                Value = "Cash Payment",
                            });
                            q.Add(new SelectListItem
                            {
                                Text = "Mpesa Payment",
                                Value = "Mpesa Payment",
                            });
                            q.Add(new SelectListItem
                            {
                                Text = "Credit Card Payment",
                                Value = "Credit Card Payment",
                            });


                        }@Html.DropDownListFor(model => model.Mode, q, "---Payment Mode---", new { @class = "form-control form-control", @required = "required", })
                    </div>


                    <div class="form-group col-md-3">
                        <label><i class="fa fa-gavel text-orange"></i>   @Html.LabelFor(model => model.Transaction_cost)</label>
                        @Html.EditorFor(model => model.Transaction_cost, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control ",
                           @Placeholder = "0.00/=",
                           @Type = "Number",
                           @Value = 0,
                       }
                   })
                    </div>


                </div>
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label><i class="fa fa-money-bill text-orange"></i>  @Html.LabelFor(model => model.Fuliza)</label>
                            @Html.EditorFor(model => model.Fuliza, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control ",
                               @Placeholder = "0.00/=",
                               @Type = "Number",
                               @Value = 0,
                           }
                       })
                        </div>
                        <div class="form-group col-md-3">
                            <label> <i class="fa fa-cash-register text-orange"></i>      @Html.LabelFor(model => model.Amount)</label>
                            @Html.EditorFor(model => model.Amount, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control ",
                               @Placeholder = "0.00/=",
                               @Type = "Number",
                               @Value = 0,
                           }
                       })
                        </div>
                        <div class="form-group col-md-3">
                            <label> <i class="fa fa-cash-register text-orange"></i>      @Html.LabelFor(model => model.Total)</label>
                            @Html.EditorFor(model => model.Total, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control ",
                               @Placeholder = "0.00/=",
                               @Type = "Number",
                                @Value = 0,
                               @Readonly = true
                           }
                       })
                        </div>

                        <script>
                            $(document).ready(function () {
                                //this calculates values automatically
                                sum();
                                $("#Transaction_cost,#Fuliza, #Amount,#Total").on("keydown keyup", function () {
                                    sum();
                                });
                            });
                            function sum() {
                                var num1 = document.getElementById('Transaction_cost').value;
                                var num2 = document.getElementById('Fuliza').value;
                                var num3 = document.getElementById('Amount').value;

                                var result = parseFloat(num1) + parseFloat(num2) + parseFloat(num3);
                                if (!isNaN(result)) {
                                    document.getElementById('Total').value = result;
                                }
                            }
                        </script>
                    </div>

                    <p style="font-family:Calibri">
                        <i class="fa fa-comment text-yellow"></i>
                        Additional Information
                    </p>
                    <div class="form-row">


                        @Html.TextAreaFor(model => model.Additional_Notes, 4, 70, htmlAttributes: new
                   {
                       style = "width: 70%; max-width:70%;",
                       @placeholder = "Additional information",
                       @autofocus = ""
                       ,
                       @class = "form-control form-rounded2"

                   })
                    </div>







                    <div style="color: red">@Html.ValidationMessageFor(x => x.Amount)</div>

                    <hr />
                    <table>
                        <thead>
                            <tr>

                                <th><i>Actions</i></th>
                            </tr>
                        </thead>
                        <tbody>
                        <td style="text-align:left">

                            <input type="submit" value="Post Expense" class="btn btn btn-success" style="color:white" onclick="return confirm('Are you sure you want to post this Expense?')" />


                            <script>
                                $(function () {
                                    $('#Create').click(function () {
                                        if (confirm('Are you sure?')) {
                                            window.location.href = $(this).data('url');
                                        }
                                    });
                                });
                            </script>
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                            <input type="reset" value="Reset" class="btn btn-danger" style="color:white" />



                        </td>
                        </tbody>
                    </table>

                }

                </form>





















                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }



            </div>
        </div>
    </div>
