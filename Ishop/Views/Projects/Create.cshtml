@model IShop.Core.Project

@{
    ViewBag.Title = "Create";
}

<style type="text/css">
    .loading {
        font-size: 10pt;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        z-index: 999;
    }

    .form-rounded {
        border-radius: 1rem;
    }

    form-rounded2 {
        border-radius: 4rem;
        border-color: orangered;
    }

    .form-rounded1 {
        border-radius: 1rem;
        border-color: red;
    }

    .form-control:focus {
        border-color: #0faa09;
    }
</style>


<!-- Main content -->

<style>
    body {
        background-image: url(../../images/33.jpg);
        background-size: cover;
        font-family: Calibri
    }



    .table-hover > tbody > tr:hover {
        background-color: #D2D2D2;
    }

    hr {
        border: none;
        color: black;
        background-color: greenyellow;
        height: 1px;
        width: 100%;
    }
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script>
    $(function () {
        $("#datepicker").datepicker();
    });
    $(function () {
        $("#datepicker2").datepicker();
    });

</script>


@if (TempData["Msg"] != null)
{<div class="row">
        <div class="alert alert-success col-md-6 col-md-offset-4" align="center">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @TempData["Msg"]
        </div>
    </div>
}

<script>
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 4000);
</script>
<!-- /.card-header -->






<br />
<div class="col d-flex justify-content-center">
    <div class="col-md-11 col-sm-12 col-12">
        <div class="card mb- mb-xl-0" style="border-radius: 24px;">
            <div class="card-header" style="background-color: #0656A5; color: white; border-radius: 14px ">
                <i class="fa fa-bookmark"></i> New Project add
            </div>
            <div class="card-body" style="background-color: white;border-radius: 24px;">
                <div class="card-body" style="background-color: #ffffffc1;border-radius: 24px;">
                    @using (Html.BeginForm("create", "projects", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <form>


                        <div class="form-row">

                            <div class="form-group col-md-3">
                                <label><i class=" fa fa-calendar-check text-primary"></i>   @Html.LabelFor(model => model.CreatedOn)</label>
                                @Html.EditorFor(model => model.CreatedOn, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @Placeholder = "Record",
                                   @Value = DateTime.Now,
                                   @ReadOnly = true,


                               }
                           })

                            </div>

                            <div class="form-group col-md-5">
                                <label><i class=" fa fa-folder-open text-primary"></i>   @Html.LabelFor(model => model.Project_Name)</label>
                                @Html.EditorFor(model => model.Project_Name, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @Placeholder = "Project_Name",
                                   @Required = true,


                               }
                           })

                            </div>




                            <div class="form-group col-md-3">
                                <label><i class="fa fa-suitcase text-primary"></i> @Html.LabelFor(model => model.Category) </label>
                                @Html.DropDownList("Category", ViewBag.Category as SelectList, "--Select Category --", new { @class = "form-control  form-control-sm", @Required = true })
                            </div>
                            <script type="text/javascript">
                                $(function () {

                                    $("#Category").chosen();
                                    $("#Status").chosen();
                                    $("#Client").chosen();

                                });
                            </script>






                            <div class="form-group col-md-2" id="other">
                                <label><i class="fa fa-file-invoice text-primary"></i>   @Html.LabelFor(model => model.Fee_Budget)</label>
                                @Html.EditorFor(model => model.Fee_Budget, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @Placeholder = "Amount",
                                   id = "Fee_Budget",
                                   onchange = "addCommas(this)",
                                   @required = true,
                               }
                           })
                            </div>


                            <div class="form-group col-md-2" id="other" style="display:none">
                                <label><i class="fa fa-wallet text-primary"></i>   @Html.LabelFor(model => model.Budget)</label>
                                @Html.EditorFor(model => model.Budget, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @Placeholder = "Amount",
                                   @Value = 0,
                                   @Readonly=true,
                                   
                               }
                           })
                            </div>
                            <script>
                                function addCommas(element) {
                                    var value = parseFloat(element.value.replace(/,/g, ''));
                                    element.value = value.toLocaleString('en-US');
                                }
                                $(function () {
                                    $('form').submit(function () {
                                        var amountString = $('#Budget').val();
                                        var amountWithoutCommas = amountString.replace(/,/g, '');
                                        $('#Budget').val(amountWithoutCommas);
                                        var amountString = $('#Fee_Budget').val();
                                        var amountWithoutCommas = amountString.replace(/,/g, '');
                                        $('#Fee_Budget').val(amountWithoutCommas);

                                    });

                                });
                            </script>
                            <div class="form-group col-md-3">
                                <label><i class="fa fa-spinner text-orange"></i> @Html.LabelFor(model => model.Status) </label>
                                @{
                                    List<SelectListItem> m = new List<SelectListItem>();
                                    m.Add(new SelectListItem
                                    {
                                        Text = "Proposed",
                                        Value = "Proposed",
                                    });
                                    m.Add(new SelectListItem
                                    {
                                        Text = "Active",
                                        Value = "Active",
                                    });
                                    m.Add(new SelectListItem
                                    {
                                        Text = "Opposed",
                                        Value = "Opposed",
                                    });
                                    m.Add(new SelectListItem
                                    {
                                        Text = "Completed",
                                        Value = "Completed",
                                    });
                                    m.Add(new SelectListItem
                                    {
                                        Text = "Cancelled",
                                        Value = "Cancelled",
                                    });
                                }@Html.DropDownListFor(model => model.Status, m, "---Project Status---", new { @class = "form-control form-control-sm", @required = "required", })
                            </div>
                            <div class="form-group col-md-4">
                                <label><i class=" fa fa-map-marker text-primary"></i>   @Html.LabelFor(model => model.location)</label>
                                @Html.EditorFor(model => model.location, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @Placeholder = "location",
                                   @Required = true,


                               }
                           })
                                <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyA-YqZINvC4zTP1wVxbTeEgmIsb5z0cQrQ"></script>
                                <script type="text/javascript">
                                    google.maps.event.addDomListener(window, 'load', function () {
                                        var places = new google.maps.places.Autocomplete(document.getElementById('location'));
                                        google.maps.event.addListener(places, 'place_changed', function () {
                                            var place = places.getPlace();
                                            document.getElementById('Latitude').value = place.geometry.location.lat();
                                            document.getElementById('Longitude').value = place.geometry.location.lng();
                                        });
                                    });
                                </script>
                            </div>


                            <div class="form-group col-md-2">
                                <label><i class=" fa fa-user-circle text-primary"></i>   @Html.LabelFor(model => model.User)</label>
                                @Html.EditorFor(model => model.User, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control form-control-sm",
                                   @Placeholder = "Record",
                                   @Value = User.Identity.Name,
                                   @ReadOnly = true,


                               }
                           })

                            </div>


                        </div>
                        <p>Additional Information</p>
                        <div class="dropdown-divider"></div>

                        <div class="row">
                            <div class="form-group col-md-4">
                                <label><i class="fa fa-suitcase text-primary"></i> @Html.LabelFor(model => model.Client) </label>
                                @Html.DropDownList("Client", ViewBag.Clients as SelectList, "--Select Client --", new { @class = "form-control  form-control-sm", @Required = true })
                            </div>
                           

                        </div>

                        <div class="dropdown-divider"></div>
                        <input type="submit" value="Submit" class="btn btn-warning" />

                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn" })
                    </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>